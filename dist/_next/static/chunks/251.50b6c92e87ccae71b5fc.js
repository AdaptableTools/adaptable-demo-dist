(window.webpackJsonp=window.webpackJsonp||[]).push([[251],{mCR9:function(e,a,r){"use strict";r.r(a);var n,t=r("q1tI"),o=(r("nX5y"),r("ThKj")),i=r("rePB"),s=(r("PMha"),r("cUqQ"),r("5TJ6"),r("jWP/"),r("iMsr"),r("mbJ9")),d=r.n(s),l=r("mXS1");function p(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?p(Object(r),!0).forEach((function(a){Object(i.a)(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}var u={DataSource:{DataSources:[{Name:"Euro Trades",Description:"Euro Trades"},{Name:"Dollar Trades",Description:"Dollar Trades"},{Name:"GBP Trades",Description:"Sterling Trades"},{Name:"2019 Actiivty",Description:"Trades Done This Year"}]},Dashboard:{Tabs:[{Name:"Search",Toolbars:["DataSource"]}]}},g=function(){var e=new o.a;e.setUpAgGridLicence();var a=function(e){var a={primaryKey:"tradeId",userName:"Demo User",adaptableId:"Data Source Demo",predefinedConfig:u,vendorGrid:c({},{columnDefs:e,rowData:void 0,enableRangeSelection:!0,sideBar:!0,suppressMenuHide:!0,floatingFilter:!0,statusBar:{statusPanels:[{statusPanel:"agTotalRowCountComponent",align:"left"},{statusPanel:"agFilteredRowCountComponent"}]},columnTypes:{abColDefNumber:{},abColDefString:{},abColDefBoolean:{},abColDefDate:{},abColDefObject:{},abColDefNumberArray:{}}},{modules:l.a})};n=d.a.init(a);var r=new o.a;return n.eventApi.on("SearchChanged",(function(e){var a=e.data[0].id;if("DataSource"==a.searchChangedTrigger){var t=a.adaptableSearchState;if(null!=t.dataSource)switch(t.dataSource.Name){case"Euro Trades":var o=r.getEuroTrades(500);n.gridApi.setGridData(o);break;case"Dollar Trades":var i=r.getDollarTrades(200);n.gridApi.setGridData(i);break;case"GBP Trades":var s=r.getGBPTrades(12);n.gridApi.setGridData(s);break;case"2019 Actiivty":var d=r.getThisYearTrades(300);n.gridApi.setGridData(d)}}})),{adaptableOptions:a,adaptableApi:n}}(e.getTradeSchema()),r=a.adaptableOptions;a.adaptableApi;return r.vendorGrid.onGridReady=function(e){e.columnApi.autoSizeAllColumns(),setTimeout((function(){return e.columnApi.autoSizeAllColumns()}),1),e.api.addEventListener("newColumnsLoaded",(function(){e.columnApi.autoSizeAllColumns()})),e.api.closeToolPanel()},{code:"import '@adaptabletools/adaptable/index.css';\nimport '@adaptabletools/adaptable/themes/dark.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham-dark.css';\nimport Adaptable from '@adaptabletools/adaptable/agGrid';\nimport { GridOptions } from '@ag-grid-community/all-modules';\nimport {\n  AdaptableOptions,\n  PredefinedConfig,\n  AdaptableApi,\n  SearchChangedEventArgs,\n  SearchChangedInfo,\n  AdaptableSearchState,\n} from '@adaptabletools/adaptable/types';\nimport { AllEnterpriseModules } from '@ag-grid-enterprise/all-modules';\nimport { HelperAgGrid } from '../../../Helpers/HelperAgGrid';\n\nvar adaptableApi: AdaptableApi;\n\nconst demoConfig: PredefinedConfig = {\n  DataSource: {\n    DataSources: [\n      {\n        Name: 'Euro Trades',\n        Description: 'Euro Trades',\n      },\n      {\n        Name: 'Dollar Trades',\n        Description: 'Dollar Trades',\n      },\n      {\n        Name: 'GBP Trades',\n        Description: 'Sterling Trades',\n      },\n      {\n        Name: '2019 Actiivty',\n        Description: 'Trades Done This Year',\n      },\n    ],\n  },\n  Dashboard: {\n    Tabs: [\n      {\n        Name: 'Search',\n        Toolbars: ['DataSource'],\n      },\n    ],\n  },\n} as PredefinedConfig;\n\nexport default (columnDefs: any[]) => {\n  const gridOptions: GridOptions = {\n    columnDefs,\n    rowData: undefined,\n    enableRangeSelection: true,\n    sideBar: true,\n    suppressMenuHide: true,\n    floatingFilter: true,\n    statusBar: {\n      statusPanels: [\n        { statusPanel: 'agTotalRowCountComponent', align: 'left' },\n        { statusPanel: 'agFilteredRowCountComponent' },\n      ],\n    },\n    columnTypes: {\n      abColDefNumber: {},\n      abColDefString: {},\n      abColDefBoolean: {},\n      abColDefDate: {},\n      abColDefObject: {},\n      abColDefNumberArray: {},\n    },\n  };\n\n  const adaptableOptions: AdaptableOptions = {\n    primaryKey: 'tradeId',\n    userName: 'Demo User',\n    adaptableId: 'Data Source Demo',\n    predefinedConfig: demoConfig,\n    vendorGrid: { ...gridOptions, modules: AllEnterpriseModules },\n  };\n  adaptableApi = Adaptable.init(adaptableOptions);\n\n  const helperAgGrid = new HelperAgGrid();\n  adaptableApi.eventApi.on(\n    'SearchChanged',\n    (searchChangedArgs: SearchChangedEventArgs) => {\n      let searchChangedInfo: SearchChangedInfo = searchChangedArgs.data[0].id;\n      if (searchChangedInfo.searchChangedTrigger == 'DataSource') {\n        let searchState: AdaptableSearchState =\n          searchChangedInfo.adaptableSearchState;\n        if (searchState.dataSource != null) {\n          switch (searchState.dataSource.Name) {\n            case 'Euro Trades':\n              let euroTrades = helperAgGrid.getEuroTrades(500);\n              adaptableApi.gridApi.setGridData(euroTrades);\n              break;\n\n            case 'Dollar Trades':\n              let dollarTrades = helperAgGrid.getDollarTrades(200);\n              adaptableApi.gridApi.setGridData(dollarTrades);\n              break;\n\n            case 'GBP Trades':\n              let sterlingTrades = helperAgGrid.getGBPTrades(12);\n              adaptableApi.gridApi.setGridData(sterlingTrades);\n              break;\n\n            case '2019 Actiivty':\n              let thisYearTrades = helperAgGrid.getThisYearTrades(300);\n              adaptableApi.gridApi.setGridData(thisYearTrades);\n              break;\n          }\n        }\n      }\n    }\n  );\n\n  return { adaptableOptions, adaptableApi };\n};\n"}};a.default=function(e){return Object(t.useEffect)((function(){var a=g();e.onReady&&e.onReady(a)}),[]),null}},mbJ9:function(e,a,r){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var n=r("o9a/");a.default=n.default,a.AdaptableNoCodeWizard=n.AdaptableNoCodeWizard}}]);