(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[228],{ivbB:function(e,n,t){"use strict";t.r(n);var o,a=t("q1tI"),r=t("o0o1"),l=t.n(r),i=t("HaE+"),s=(t("nX5y"),t("smsc")),d=t("ThKj"),c=t("rePB"),p=(t("PMha"),t("5TJ6"),t("jWP/"),t("mbJ9")),u=t.n(p),m=t("mXS1");function b(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function f(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?b(Object(t),!0).forEach((function(n){Object(c.a)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):b(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var g={Entitlements:{FunctionEntitlements:[{FunctionName:"Layout",AccessLevel:"Hidden"}]}},C=function(){var e=Object(i.a)(l.a.mark((function e(n,t){var a;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a={primaryKey:"OrderId",userName:"Demo User",adaptableId:"Row Selection Demo",predefinedConfig:g,vendorGrid:f(f({},{columnDefs:n,rowData:t,enableRangeSelection:!0,sideBar:!0,suppressMenuHide:!0,rowSelection:"multiple",autoGroupColumnDef:{headerName:"Employee",field:"employee",width:200,cellRenderer:"agGroupCellRenderer",cellRendererParams:{checkbox:!0}},suppressRowClickSelection:!0,columnTypes:{abColDefNumber:{},abColDefString:{},abColDefBoolean:{},abColDefDate:{},abColDefObject:{},abColDefNumberArray:{}}}),{},{modules:m.a})},e.next=5,u.a.init(a);case 5:return(o=e.sent).eventApi.on("SelectionChanged",(function(e){console.log("Selection Has Changed"),console.log(e.data[0].id)})),e.abrupt("return",{adaptableOptions:a,adaptableApi:o});case 8:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),y=Object(i.a)(l.a.mark((function e(){var n,t,o,a,r;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(n=new d.a).setUpAgGridLicence(),t=JSON.parse(JSON.stringify(s)),n.convertExcelData(t),o=n.getRowSelectionNorthwindColumnSchema(),e.next=7,C(o,t);case 7:return a=e.sent,r=a.adaptableOptions,a.adaptableApi,r.vendorGrid.onGridReady=function(e){e.columnApi.autoSizeAllColumns(),setTimeout((function(){return e.columnApi.autoSizeAllColumns()}),1),e.api.addEventListener("newColumnsLoaded",(function(){e.columnApi.autoSizeAllColumns()})),e.api.closeToolPanel()},e.abrupt("return",{code:"import '@adaptabletools/adaptable/index.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';\nimport Adaptable from '@adaptabletools/adaptable/agGrid';\nimport { GridOptions, ColDef } from '@ag-grid-community/all-modules';\nimport {\n  AdaptableOptions,\n  PredefinedConfig,\n  AdaptableApi,\n  SelectionChangedEventArgs,\n} from '@adaptabletools/adaptable/types';\nimport { AllEnterpriseModules } from '@ag-grid-enterprise/all-modules';\n\nvar adaptableApi: AdaptableApi;\n\nconst demoConfig: PredefinedConfig = {\n  Entitlements: {\n    FunctionEntitlements: [\n      {\n        FunctionName: 'Layout',\n        AccessLevel: 'Hidden',\n      },\n    ],\n  },\n} as PredefinedConfig;\n\nexport default async (columnDefs: any[], rowData: any[]) => {\n  let autoGroupColumnDef: ColDef = {\n    headerName: 'Employee',\n    field: 'employee',\n    width: 200,\n    cellRenderer: 'agGroupCellRenderer',\n    cellRendererParams: {\n      checkbox: true,\n    },\n  };\n\n  const gridOptions: GridOptions = {\n    columnDefs,\n    rowData,\n    enableRangeSelection: true,\n    sideBar: true,\n    suppressMenuHide: true,\n    rowSelection: 'multiple',\n    autoGroupColumnDef: autoGroupColumnDef,\n    suppressRowClickSelection: true,\n    columnTypes: {\n      abColDefNumber: {},\n      abColDefString: {},\n      abColDefBoolean: {},\n      abColDefDate: {},\n      abColDefObject: {},\n      abColDefNumberArray: {},\n    },\n  };\n\n  const adaptableOptions: AdaptableOptions = {\n    primaryKey: 'OrderId',\n    userName: 'Demo User',\n    adaptableId: 'Row Selection Demo',\n    predefinedConfig: demoConfig,\n    vendorGrid: { ...gridOptions, modules: AllEnterpriseModules },\n  };\n  adaptableApi = await Adaptable.init(adaptableOptions);\n\n  adaptableApi.eventApi.on(\n    'SelectionChanged',\n    (selectedChangedArgs: SelectionChangedEventArgs) => {\n      console.log('Selection Has Changed');\n      console.log(selectedChangedArgs.data[0].id);\n    }\n  );\n\n  return { adaptableOptions, adaptableApi };\n};\n"});case 12:case"end":return e.stop()}}),e)})));n.default=function(e){return Object(a.useEffect)((function(){y().then((function(n){e.onReady&&e.onReady(n)}))}),[]),null}}}]);