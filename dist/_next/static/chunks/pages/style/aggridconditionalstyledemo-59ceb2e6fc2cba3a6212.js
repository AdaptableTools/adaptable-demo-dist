_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[164],{"5Z/r":function(e,o,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/style/aggridconditionalstyledemo",function(){return t("QVQS")}])},QVQS:function(e,o,t){"use strict";t.r(o);var a=t("q1tI"),l=t.n(a),n=t("d3qH"),s=l.a.createElement;o.default=function(){return s(n.a,{demo:Promise.all([t.e(0),t.e(8),t.e(7),t.e(9),t.e(1),t.e(287)]).then(t.bind(null,"sd8m")),pageTitle:"Conditional Style Demo",description:s("div",null,s("p",null,"Conditional Styles allow you to create rules that decide how columns and rows are styled."," "),s("p",null,"The 'Scope' of the style determines where it can be applied: ie. whole row, one or more columns, or one or more column data types."),s("p",null,"The Rule is based on a"," ",s("a",{href:"https://docs.adaptabletools.com/docs/common-objects/common-objects-predicate",target:"_blank"},"Predicate")," ","- only the Predicates associated with the selected scope are available."),s("p",null,"For more complicated rules there is the option, instead, to use an"," ",s("a",{href:"https://docs.adaptabletools.com/docs/common-objects/common-objects-expression",target:"_blank"},"Expression")," ","which will enable evaluation across multiple columns using more advanced criteria."),s("p",null,"When the rule is met the column / row will be styled according to the style properties provided. Alternatively you can specify a css style name (which you provide)."),s("p",null,"This example has 5 Conditional Styles:",s("ul",null,s("li",null,"All colunns of DataType: Number have a green font when they are positive (using the 'Positive' predicate)"),s("li",null,"All colunns of DataType: Number have a red font when they are negative (using the 'Negative' predicate)"),s("li",null,"'Item Cost' column is italicised with a yellow background where it is greater than 60 (using the 'GreaterThan' predicate)"),s("li",null,"Whole row is gray where 'InvoicedCost' column value is over 1000 (this uses an"," ",s("a",{href:"https://docs.adaptabletools.com/docs/common-objects/common-objects-expression",target:"_blank"},"Expression")," ","rather than a"," ",s("a",{href:"https://docs.adaptabletools.com/docs/common-objects/common-objects-predicate",target:"_blank"},"Predicate")," ","and a Scope of 'All: true')"),s("li",null,"Employee Column uses the style pre-defined in the"," ",s("b",null,"employeeStyle")," ClassName where the cell value is Stephen or Laura",s("br",null),"(Note: this uses the 'new_starter' ",s("b",null,"custom predicate")," ","defined in the ",s("i",null,"customPredicateDefs")," section of Adaptable Options.)")))),helpResources:s("div",null,s("a",{href:"https://docs.adaptabletools.com/docs/adaptable-functions/conditional-style-function",target:"_blank"},"Conditional Style Function")," ","|"," ",s("a",{href:"https://docs.adaptabletools.com/docs/predefined-config/conditional-style-config",target:"_blank"},"Conditional Style Predefined Config")," ","|"," ",s("a",{href:"https://docs.adaptabletools.com/docs/adaptable-api/conditional-style-api",target:"_blank"},"Conditional Style API")," ","|"," ",s("a",{href:"https://docs.adaptabletools.com/docs/common-objects/common-objects-predicate",target:"_blank"},"Predicate")," ","|"," ",s("a",{href:"https://docs.adaptabletools.com/docs/common-objects/common-objects-expression",target:"_blank"},"Expression")," ")})}}},[["5Z/r",2,0,5,3,4,6,1]]]);