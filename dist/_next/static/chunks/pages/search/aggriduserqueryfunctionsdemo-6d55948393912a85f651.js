_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[155],{"+ZJW":function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/search/aggriduserqueryfunctionsdemo",function(){return t("w+yi")}])},"w+yi":function(e,n,t){"use strict";t.r(n);var a=t("q1tI"),o=t.n(a),i=t("d3qH"),s=o.a.createElement;n.default=function(){return s(i.a,{demo:Promise.all([t.e(0),t.e(8),t.e(6),t.e(9),t.e(1),t.e(284)]).then(t.bind(null,"gvb4")),pageTitle:"User Query Functions Demo",description:s("div",null,s("p",null,"The AdapTable parser ships with a"," ",s("a",{href:"https://docs.adaptabletools.com/docs/common-objects/common-objects-expression/#appendix--expression-functions",target:"_blank"},"very large number")," ","of Expression Functions that can be used in a query."),s("p",null,"Users can add to this at run-time by providing custom expresion functions which AdapTable will invoke the query is being evaluated."),s("p",null,"The main element to be provided is a ",s("b",null,"handler")," property that wraps the actual JavaScript function."),s("p",null,"Additionally ",s("i",null,"description"),", ",s("i",null,"signature")," and"," ",s("i",null,"examples")," properties can be provided which are displayed in the Expression Editor to help the run-time user."),s("p",null,"Note the important ",s("b",null,"isPredicate")," property; if set to"," ",s("i",null,"true"),", the Expression Function can be used as the main part of a Query (which can only return booleans)."),s("p",null,"In this Demo we provide 2 custom Expression Functions:"),s("ul",null,s("li",null,s("p",null,s("b",null,"IN_BUSINESS_YEAR")," - a ",s("b",null,"Predicate")," user function which checks whether or not a given date is in the Current Business Year."),s("p",null,"Here we use it inside the Query we are running: ('IN_BUSINESS_YEAR([OrderDate]) AND IN_BUSINESS_YEAR([ShippedDate])')."),s("p",null,"The query returns only rows where both the Order and Shipped Dates are in the current business year.")),s("li",null,s("p",null,s("b",null,"GBP_PRICE")," - a ",s("b",null,"Non Predicate")," user function which returns the GBP conversion for a USD currency value."),s("p",null,"(The function uses a mock service and also passes in the Shipping Details (which we get from the Context in the handler) in order to arrive at the fictitious price.)"),s("p",null,"The user function is used to create 2 Calculated Columns - 'OrderCostGBP' and 'PackageCostGBP'"),s("p",null,"Each Calclated Column contains an Expression which is passed the equivalent USD column as the sole input."),s("p",null,"Note also that we create a Format Column with the Scope of the 2 columns that adds a '\xa3' and formats the digits.")))),helpResources:s("div",null,s("a",{href:"https://docs.adaptabletools.com/docs/adaptable-functions/query-function",target:"_blank"},"Query Function")," ","|"," ",s("a",{href:"https://docs.adaptabletools.com/docs/common-objects/common-objects-expression",target:"_blank"},"Adaptable Expression")," ","|"," ",s("a",{href:"https://docs.adaptabletools.com/docs/predefined-config/query-config",target:"_blank"},"Query Predefined Config")," ","|"," ",s("a",{href:"https://docs.adaptabletools.com/docs/adaptable-api/query-api",target:"_blank"},"Query API")," ")})}}},[["+ZJW",2,0,5,3,4,7,1]]]);