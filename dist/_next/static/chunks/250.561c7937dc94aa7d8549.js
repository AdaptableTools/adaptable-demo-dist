(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[250],{Wvtg:function(e,n,a){"use strict";a.r(n);var t,o=a("q1tI"),r=a("o0o1"),i=a.n(r),l=a("HaE+"),d=(a("nX5y"),a("smsc")),p=a("ThKj"),s=a("rePB"),c=(a("PMha"),a("cUqQ"),a("5TJ6"),a("jWP/"),a("iMsr"),a("mbJ9")),u=a.n(c),b=a("mXS1");function m(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function f(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?m(Object(a),!0).forEach((function(n){Object(s.a)(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):m(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}var g={},y=function(){var e=Object(l.a)(i.a.mark((function e(n,a){var o;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o={primaryKey:"OrderId",userName:"Demo User",adaptableId:"Adaptable Ready Demo",predefinedConfig:g,vendorGrid:f(f({},{columnDefs:n,rowData:a,enableRangeSelection:!0,rowSelection:"multiple",sideBar:!0,suppressMenuHide:!0,autoGroupColumnDef:{sortable:!0},columnTypes:{abColDefNumber:{},abColDefString:{},abColDefBoolean:{},abColDefDate:{},abColDefObject:{},abColDefNumberArray:{}}}),{},{modules:b.a})},e.next=4,u.a.init(o);case 4:return(t=e.sent).eventApi.on("AdaptableReady",(function(e){t.quickSearchApi.applyQuickSearch("o*"),e.vendorGrid.onSelectionChanged=function(e){var n=e.api.getSelectedNodes().length;console.log("selection changed, "+n+" rows selected")}})),e.abrupt("return",{adaptableOptions:o,adaptableApi:t});case 7:case"end":return e.stop()}}),e)})));return function(n,a){return e.apply(this,arguments)}}(),O=Object(l.a)(i.a.mark((function e(){var n,a,t,o,r;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(n=new p.a).setUpAgGridLicence(),a=JSON.parse(JSON.stringify(d)),n.convertExcelData(a),t=n.getBasicNorthwindColumnSchema(),e.next=7,y(t,a);case 7:return o=e.sent,r=o.adaptableOptions,o.adaptableApi,r.vendorGrid.onGridReady=function(e){e.columnApi.autoSizeAllColumns(),setTimeout((function(){return e.columnApi.autoSizeAllColumns()}),1),e.api.addEventListener("newColumnsLoaded",(function(){e.columnApi.autoSizeAllColumns()})),e.api.closeToolPanel()},e.abrupt("return",{code:"import '@adaptabletools/adaptable/index.css';\nimport '@adaptabletools/adaptable/themes/dark.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham-dark.css';\nimport Adaptable from '@adaptabletools/adaptable/agGrid';\nimport {\n  GridOptions,\n  SelectionChangedEvent,\n} from '@ag-grid-community/all-modules';\nimport {\n  AdaptableOptions,\n  PredefinedConfig,\n  AdaptableApi,\n  AdaptableReadyInfo,\n} from '@adaptabletools/adaptable/types';\nimport { AllEnterpriseModules } from '@ag-grid-enterprise/all-modules';\n\nvar adaptableApi: AdaptableApi;\n\nconst demoConfig: PredefinedConfig = {} as PredefinedConfig;\n\nexport default async (columnDefs: any[], rowData: any[]) => {\n  const gridOptions: GridOptions = {\n    columnDefs,\n    rowData,\n    enableRangeSelection: true,\n    rowSelection: 'multiple',\n    sideBar: true,\n    suppressMenuHide: true,\n    autoGroupColumnDef: {\n      sortable: true,\n    },\n    columnTypes: {\n      abColDefNumber: {},\n      abColDefString: {},\n      abColDefBoolean: {},\n      abColDefDate: {},\n      abColDefObject: {},\n      abColDefNumberArray: {},\n    },\n  };\n\n  const adaptableOptions: AdaptableOptions = {\n    primaryKey: 'OrderId',\n    userName: 'Demo User',\n    adaptableId: 'Adaptable Ready Demo',\n    predefinedConfig: demoConfig,\n    vendorGrid: { ...gridOptions, modules: AllEnterpriseModules },\n  };\n  adaptableApi = await Adaptable.init(adaptableOptions);\n\n  adaptableApi.eventApi.on(\n    'AdaptableReady',\n    (adaptableReadyInfo: AdaptableReadyInfo) => {\n      adaptableApi.quickSearchApi.applyQuickSearch('o*');\n      const gridOptions: GridOptions = adaptableReadyInfo.vendorGrid;\n      gridOptions.onSelectionChanged = (event: SelectionChangedEvent) => {\n        var rowCount = event.api.getSelectedNodes().length;\n        console.log('selection changed, ' + rowCount + ' rows selected');\n      };\n    }\n  );\n\n  return { adaptableOptions, adaptableApi };\n};\n"});case 12:case"end":return e.stop()}}),e)})));n.default=function(e){return Object(o.useEffect)((function(){O().then((function(n){e.onReady&&e.onReady(n)}))}),[]),null}}}]);