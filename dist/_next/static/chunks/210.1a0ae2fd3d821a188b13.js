(window.webpackJsonp=window.webpackJsonp||[]).push([[210],{WQ0p:function(e,n,a){"use strict";a.r(n);var r=a("q1tI"),t=a("9Jkg"),o=a.n(t),l=(a("nX5y"),a("smsc")),i=a("ThKj"),p=a("hfKm"),d=a.n(p),s=a("2Eek"),u=a.n(s),m=a("XoMD"),f=a.n(m),b=a("Jo+v"),c=a.n(b),g=a("4mXO"),O=a.n(g),A=a("pLtp"),y=a.n(A),C=a("vYYK"),D=(a("PMha"),a("cUqQ"),a("5TJ6"),a("jWP/"),a("iMsr"),a("mbJ9")),h=a.n(D),T=a("mXS1");function v(e,n){var a=y()(e);if(O.a){var r=O()(e);n&&(r=r.filter((function(n){return c()(e,n).enumerable}))),a.push.apply(a,r)}return a}function w(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?v(Object(a),!0).forEach((function(n){Object(C.a)(e,n,a[n])})):f.a?u()(e,f()(a)):v(Object(a)).forEach((function(n){d()(e,n,c()(a,n))}))}return e}var I={Dashboard:{VisibleToolbars:["Alert"]},Alert:{MaxAlertsInStore:10,AlertDefinitions:[{ColumnId:"InvoicedCost",MessageType:"Warning",Range:{Operand1:"2000",Operand1Type:"Value",Operand2:"",Operand2Type:"Value",Operator:"GreaterThan"},AlertProperties:{ShowPopup:!0}},{ColumnId:"ItemCount",MessageType:"Info",Range:{Operand1:"100",Operand1Type:"Value",Operand2:"",Operand2Type:"Value",Operator:"PercentChange"},AlertProperties:{ShowPopup:!1}}]}},P=a("6OHV"),S=function(){var e=new i.a;e.setUpAgGridLicence();var n=new P.a,a=JSON.parse(o()(l)),r=function(e,n){var a={primaryKey:"OrderId",userName:"Demo User",adaptableId:"Alert Demo",predefinedConfig:I,vendorGrid:w({},{columnDefs:e,rowData:n,animateRows:!0,enableRangeSelection:!0,sideBar:!0,suppressMenuHide:!0,floatingFilter:!0,columnTypes:{abColDefNumber:{},abColDefString:{},abColDefBoolean:{},abColDefDate:{},abColDefObject:{},abColDefNumberArray:{}}},{modules:T.a})};return{adaptableOptions:a,adaptableApi:h.a.init(a)}}(e.getFlashingCellColumnSchema(),a),t=r.adaptableOptions,p=r.adaptableApi;return p.eventApi.on("AdaptableReady",(function(){n.startTickingDataagGridOrders(t.vendorGrid,p,750,11084,11142,!0)})),t.vendorGrid.onGridReady=function(e){e.columnApi.autoSizeAllColumns(),setTimeout((function(){return e.columnApi.autoSizeAllColumns()}),1),e.api.addEventListener("newColumnsLoaded",(function(){e.columnApi.autoSizeAllColumns()})),e.api.closeToolPanel()},{unload:function(){n.turnOffTicking()},code:"import '@adaptabletools/adaptable/index.css';\nimport '@adaptabletools/adaptable/themes/dark.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham-dark.css';\nimport Adaptable from '@adaptabletools/adaptable/agGrid';\nimport { GridOptions } from '@ag-grid-community/all-modules';\nimport {\n  AdaptableOptions,\n  PredefinedConfig,\n  AdaptableApi,\n} from '@adaptabletools/adaptable/types';\nimport { AllEnterpriseModules } from '@ag-grid-enterprise/all-modules';\n\nvar adaptableApi: AdaptableApi;\n\nconst demoConfig: PredefinedConfig = {\n  Dashboard: {\n    VisibleToolbars: ['Alert'],\n  },\n  Alert: {\n    MaxAlertsInStore: 10,\n    AlertDefinitions: [\n      {\n        ColumnId: 'InvoicedCost',\n        MessageType: 'Warning',\n        Range: {\n          Operand1: '2000',\n          Operand1Type: 'Value',\n          Operand2: '',\n          Operand2Type: 'Value',\n          Operator: 'GreaterThan',\n        },\n        AlertProperties: {\n          ShowPopup: true,\n        },\n      },\n      {\n        ColumnId: 'ItemCount',\n        MessageType: 'Info',\n        Range: {\n          Operand1: '100',\n          Operand1Type: 'Value',\n          Operand2: '',\n          Operand2Type: 'Value',\n          Operator: 'PercentChange',\n        },\n        AlertProperties: {\n          ShowPopup: false,\n        },\n      },\n    ],\n  },\n} as PredefinedConfig;\n\nexport default (columnDefs: any[], rowData: any[]) => {\n  let gridOptions: GridOptions = {\n    columnDefs,\n    rowData,\n    animateRows: true,\n    enableRangeSelection: true,\n    sideBar: true,\n    suppressMenuHide: true,\n    floatingFilter: true,\n    columnTypes: {\n      abColDefNumber: {},\n      abColDefString: {},\n      abColDefBoolean: {},\n      abColDefDate: {},\n      abColDefObject: {},\n      abColDefNumberArray: {},\n    },\n  };\n\n  const adaptableOptions: AdaptableOptions = {\n    primaryKey: 'OrderId',\n    userName: 'Demo User',\n    adaptableId: 'Alert Demo',\n    predefinedConfig: demoConfig,\n    vendorGrid: { ...gridOptions, modules: AllEnterpriseModules },\n  };\n  adaptableApi = Adaptable.init(adaptableOptions);\n\n  return { adaptableOptions, adaptableApi };\n};\n"}};n.default=function(e){return Object(r.useEffect)((function(){var n=S();e.onReady&&e.onReady(n)}),[]),null}}}]);