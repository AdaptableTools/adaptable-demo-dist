(window.webpackJsonp=window.webpackJsonp||[]).push([[207],{vYJL:function(n,e,a){"use strict";a.r(e);var t=a("q1tI"),o=(a("nX5y"),a("ThKj")),r=a("hfKm"),l=a.n(r),i=a("2Eek"),d=a.n(i),s=a("XoMD"),u=a.n(s),p=a("Jo+v"),c=a.n(p),m=a("4mXO"),C=a.n(m),b=a("pLtp"),f=a.n(b),y=a("vYYK"),g=(a("PMha"),a("cUqQ"),a("5TJ6"),a("jWP/"),a("iMsr"),a("mbJ9")),D=a.n(g),S=a("mXS1");function O(n,e){var a=f()(n);if(C.a){var t=C()(n);e&&(t=t.filter((function(e){return c()(n,e).enumerable}))),a.push.apply(a,t)}return a}function A(n){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?O(Object(a),!0).forEach((function(e){Object(y.a)(n,e,a[e])})):u.a?d()(n,u()(a)):O(Object(a)).forEach((function(e){l()(n,e,c()(a,e))}))}return n}var h={Dashboard:{VisibleToolbars:["ColumnFilter","Layout","QuickSearch"]},ConditionalStyle:{ConditionalStyles:[{ColumnId:"",ColumnCategoryId:"",Style:{BackColor:"#87cefa"},ConditionalStyleScope:"Row",Expression:{ColumnValueExpressions:[{ColumnId:"currency",ColumnDisplayValues:["EUR","GBP","USD"]}]}}]},Layout:{CurrentLayout:"Data Source",Layouts:[{Columns:["tradeId","notional","country","counterparty","changeOnYear","currency","bidOfferSpread","price","ask","bid","sandpRating","deskId","bloombergAsk","lastUpdated","lastUpdatedBy"],ColumnSorts:[{Column:"tradeId",SortOrder:"Descending"}],Name:"Data Source"}]},ColumnFilter:{ColumnFilters:[{Filter:{RangeExpressions:[{ColumnId:"counterparty",Ranges:[{Operand1:"m",Operand1Type:"Value",Operand2:"",Operand2Type:"Value",Operator:"Contains"}]}]},ColumnId:"counterparty"}]},QuickSearch:{QuickSearchText:"i*"}},k=a("6OHV"),R=function(){var n=new o.a;n.setUpAgGridLicence();var e=new k.a,a=n.getTradeSchema(),t=n.getTrades(1e3),r=function(n,e){var a={primaryKey:"tradeId",userName:"Demo User",adaptableId:"DataSource Changes Demo",predefinedConfig:h,vendorGrid:A({},{columnDefs:n,rowData:e,enableRangeSelection:!0,sideBar:!0,suppressMenuHide:!0,floatingFilter:!0,statusBar:{statusPanels:[{statusPanel:"agTotalRowCountComponent",align:"left"},{statusPanel:"agFilteredRowCountComponent"}]},columnTypes:{abColDefNumber:{},abColDefString:{},abColDefBoolean:{},abColDefDate:{},abColDefObject:{},abColDefNumberArray:{}}},{modules:S.a})};return{adaptableOptions:a,adaptableApi:D.a.init(a)}}(a,t),l=r.adaptableOptions;return r.adaptableApi.eventApi.on("AdaptableReady",(function(){e.startTickingDataagGridAddRow(l.vendorGrid,t,1e3,3e3),e.startTickingDataagGridDeleteRow(l.vendorGrid,t,3e3,100)})),l.vendorGrid.onGridReady=function(n){n.columnApi.autoSizeAllColumns(),setTimeout((function(){return n.columnApi.autoSizeAllColumns()}),1),n.api.addEventListener("newColumnsLoaded",(function(){n.columnApi.autoSizeAllColumns()})),n.api.closeToolPanel()},{unload:function(){e.turnOffTicking()},code:"import '@adaptabletools/adaptable/index.css';\nimport '@adaptabletools/adaptable/themes/dark.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham-dark.css';\nimport Adaptable from '@adaptabletools/adaptable/agGrid';\nimport { GridOptions } from '@ag-grid-community/all-modules';\nimport {\n  AdaptableOptions,\n  PredefinedConfig,\n  AdaptableApi,\n} from '@adaptabletools/adaptable/types';\nimport { AllEnterpriseModules } from '@ag-grid-enterprise/all-modules';\n\nvar adaptableApi: AdaptableApi;\n\nconst demoConfig: PredefinedConfig = {\n  Dashboard: {\n    VisibleToolbars: ['ColumnFilter', 'Layout', 'QuickSearch'],\n  },\n  ConditionalStyle: {\n    ConditionalStyles: [\n      {\n        ColumnId: '',\n        ColumnCategoryId: '',\n        Style: {\n          BackColor: '#87cefa',\n        },\n        ConditionalStyleScope: 'Row',\n        Expression: {\n          ColumnValueExpressions: [\n            {\n              ColumnId: 'currency',\n              ColumnDisplayValues: ['EUR', 'GBP', 'USD'],\n            },\n          ],\n        },\n      },\n    ],\n  },\n  Layout: {\n    CurrentLayout: 'Data Source',\n    Layouts: [\n      {\n        Columns: [\n          'tradeId',\n          'notional',\n          'country',\n          'counterparty',\n          'changeOnYear',\n          'currency',\n          'bidOfferSpread',\n          'price',\n          'ask',\n          'bid',\n          'sandpRating',\n          'deskId',\n          'bloombergAsk',\n          'lastUpdated',\n          'lastUpdatedBy',\n        ],\n        ColumnSorts: [{ Column: 'tradeId', SortOrder: 'Descending' }],\n        Name: 'Data Source',\n      },\n    ],\n  },\n  ColumnFilter: {\n    ColumnFilters: [\n      {\n        Filter: {\n          RangeExpressions: [\n            {\n              ColumnId: 'counterparty',\n              Ranges: [\n                {\n                  Operand1: 'm',\n                  Operand1Type: 'Value',\n                  Operand2: '',\n                  Operand2Type: 'Value',\n                  Operator: 'Contains',\n                },\n              ],\n            },\n          ],\n        },\n        ColumnId: 'counterparty',\n      },\n    ],\n  },\n  QuickSearch: {\n    QuickSearchText: 'i*',\n  },\n} as PredefinedConfig;\n\nexport default (columnDefs: any[], rowData: any[]) => {\n  const gridOptions: GridOptions = {\n    columnDefs,\n    rowData,\n    enableRangeSelection: true,\n    sideBar: true,\n    suppressMenuHide: true,\n    floatingFilter: true,\n    statusBar: {\n      statusPanels: [\n        { statusPanel: 'agTotalRowCountComponent', align: 'left' },\n        { statusPanel: 'agFilteredRowCountComponent' },\n      ],\n    },\n    columnTypes: {\n      abColDefNumber: {},\n      abColDefString: {},\n      abColDefBoolean: {},\n      abColDefDate: {},\n      abColDefObject: {},\n      abColDefNumberArray: {},\n    },\n  };\n\n  const adaptableOptions: AdaptableOptions = {\n    primaryKey: 'tradeId',\n    userName: 'Demo User',\n    adaptableId: 'DataSource Changes Demo',\n    predefinedConfig: demoConfig,\n    vendorGrid: { ...gridOptions, modules: AllEnterpriseModules },\n  };\n  adaptableApi = Adaptable.init(adaptableOptions);\n\n  return { adaptableOptions, adaptableApi };\n};\n"}};e.default=function(n){return Object(t.useEffect)((function(){var e=R();n.onReady&&n.onReady(e)}),[]),null}}}]);