(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[234],{"/Kwv":function(n,e,t){"use strict";t.r(e);var o,a=t("q1tI"),l=t("o0o1"),r=t.n(l),i=t("HaE+"),u=(t("nX5y"),t("smsc")),d=t("ThKj"),s=t("rePB"),m=(t("PMha"),t("cUqQ"),t("5TJ6"),t("jWP/"),t("iMsr"),t("Mk/Z"),t("mbJ9")),c=t.n(m),p=t("mXS1");function C(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function b(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?C(Object(t),!0).forEach((function(e){Object(s.a)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):C(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var y={ActionColumn:{ActionColumns:[{ColumnId:"Multiply",ButtonText:"Click",ShouldRenderPredicate:"shouldRenderMultiplyPredicate",RenderFunction:"renderMultiplyFunction"},{ColumnId:"Plus",ButtonText:"+"},{ColumnId:"Minus",ButtonText:"-"},{ColumnId:"Action",ButtonText:"Delete Row"}]},Layout:{CurrentLayout:"Action Cols",Layouts:[{Columns:["OrderId","ItemCost","Multiply","CompanyName","Plus","ItemCount","Minus","Employee","Action"],ColumnSorts:[],Name:"Action Cols"}]}},f=function(){var n=Object(i.a)(r.a.mark((function n(e,t){var a;return r.a.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return a={primaryKey:"OrderId",userName:"Demo User",adaptableId:"Action Column Demo",userFunctions:[{type:"ActionColumnRenderFunction",name:"renderMultiplyFunction",handler:function(n){return"Robert King"==n.rowData.Employee||"Janet Leverling"==n.rowData.Employee?'<button style="color:blue; font-weight:bold">Double</button>':'<button style="color:red; font-weight:bold; font-style:italic">Treble</button>'}},{type:"ActionColumnShouldRenderPredicate",name:"shouldRenderMultiplyPredicate",handler:function(n){return"Margaret Peacock"!=n.rowData.Employee}}],predefinedConfig:y,vendorGrid:b(b({},{columnDefs:e,rowData:t,enableRangeSelection:!0,sideBar:!0,suppressMenuHide:!0,autoGroupColumnDef:{sortable:!0},columnTypes:{abColDefNumber:{},abColDefString:{},abColDefBoolean:{},abColDefDate:{},abColDefObject:{},abColDefNumberArray:{}}}),{},{modules:p.a})},n.next=4,c.a.init(a);case 4:return(o=n.sent).eventApi.on("ActionColumnClicked",(function(n){var e=n.data[0].id,t=e.rowData,a=n.data[0].id.actionColumn;if("Plus"==a.ColumnId){var l=t.ItemCount;o.gridApi.setCellValue("ItemCount",l+1,e.primaryKeyValue,!0)}else if("Minus"==a.ColumnId){var r=t.ItemCount;o.gridApi.setCellValue("ItemCount",r-1,e.primaryKeyValue,!0)}else if("Multiply"==a.ColumnId){var i="Robert King"==t.Employee||"Janet Leverling"==t.Employee?2:3,u=t.ItemCost*i;u=Math.round(100*u)/100,o.gridApi.setCellValue("ItemCost",u,e.primaryKeyValue,!0)}else"Action"==a.ColumnId&&o.gridApi.deleteGridData([e.rowData])})),n.abrupt("return",{adaptableOptions:a,adaptableApi:o});case 7:case"end":return n.stop()}}),n)})));return function(e,t){return n.apply(this,arguments)}}(),A=Object(i.a)(r.a.mark((function n(){var e,t,o,a,l;return r.a.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return(e=new d.a).setUpAgGridLicence(),t=JSON.parse(JSON.stringify(u)),e.convertExcelData(t),o=e.getBasicNorthwindColumnSchema(),n.next=7,f(o,t);case 7:return a=n.sent,l=a.adaptableOptions,a.adaptableApi,l.vendorGrid.onGridReady=function(n){n.columnApi.autoSizeAllColumns(),setTimeout((function(){return n.columnApi.autoSizeAllColumns()}),1),n.api.addEventListener("newColumnsLoaded",(function(){n.columnApi.autoSizeAllColumns()})),n.api.closeToolPanel()},n.abrupt("return",{code:"import '@adaptabletools/adaptable/index.css';\nimport '@adaptabletools/adaptable/themes/dark.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham-dark.css';\nimport './actioncolumn.css';\nimport '../../../../DemoPage/aggriddemo.css';\nimport Adaptable from '@adaptabletools/adaptable/agGrid';\nimport { GridOptions } from '@ag-grid-community/all-modules';\nimport {\n  AdaptableOptions,\n  PredefinedConfig,\n  AdaptableApi,\n  ActionColumnClickedEventArgs,\n  ActionColumnClickedInfo,\n  ActionColumnRenderParams,\n} from '@adaptabletools/adaptable/types';\nimport { AllEnterpriseModules } from '@ag-grid-enterprise/all-modules';\n\nvar adaptableApi: AdaptableApi;\n\nconst demoConfig: PredefinedConfig = {\n  ActionColumn: {\n    ActionColumns: [\n      {\n        ColumnId: 'Multiply',\n        ButtonText: 'Click',\n        ShouldRenderPredicate: 'shouldRenderMultiplyPredicate',\n        RenderFunction: 'renderMultiplyFunction',\n      },\n      {\n        ColumnId: 'Plus',\n        ButtonText: '+',\n      },\n      {\n        ColumnId: 'Minus',\n        ButtonText: '-',\n      },\n      {\n        ColumnId: 'Action',\n        ButtonText: 'Delete Row',\n      },\n    ],\n  },\n  Layout: {\n    CurrentLayout: 'Action Cols',\n    Layouts: [\n      {\n        Columns: [\n          'OrderId',\n          'ItemCost',\n          'Multiply',\n          'CompanyName',\n          'Plus',\n          'ItemCount',\n          'Minus',\n          'Employee',\n          'Action',\n        ],\n        ColumnSorts: [],\n        Name: 'Action Cols',\n      },\n    ],\n  },\n} as PredefinedConfig;\n\nexport default async (columnDefs: any[], rowData: any[]) => {\n  const gridOptions: GridOptions = {\n    columnDefs,\n    rowData,\n    enableRangeSelection: true,\n    sideBar: true,\n    suppressMenuHide: true,\n    autoGroupColumnDef: {\n      sortable: true,\n    },\n    columnTypes: {\n      abColDefNumber: {},\n      abColDefString: {},\n      abColDefBoolean: {},\n      abColDefDate: {},\n      abColDefObject: {},\n      abColDefNumberArray: {},\n    },\n  };\n\n  const adaptableOptions: AdaptableOptions = {\n    primaryKey: 'OrderId',\n    userName: 'Demo User',\n    adaptableId: 'Action Column Demo',\n    userFunctions: [\n      {\n        type: 'ActionColumnRenderFunction',\n        name: 'renderMultiplyFunction',\n        handler(params: ActionColumnRenderParams) {\n          return params.rowData.Employee == 'Robert King' ||\n            params.rowData.Employee == 'Janet Leverling'\n            ? '<button style=\"color:blue; font-weight:bold\">Double</button>'\n            : '<button style=\"color:red; font-weight:bold; font-style:italic\">Treble</button>';\n        },\n      },\n      {\n        type: 'ActionColumnShouldRenderPredicate',\n        name: 'shouldRenderMultiplyPredicate',\n        handler(params) {\n          return params.rowData.Employee != 'Margaret Peacock';\n        },\n      },\n    ],\n    predefinedConfig: demoConfig,\n    vendorGrid: { ...gridOptions, modules: AllEnterpriseModules },\n  };\n  adaptableApi = await Adaptable.init(adaptableOptions);\n\n  adaptableApi.eventApi.on(\n    'ActionColumnClicked',\n    (actionColumnEventArgs: ActionColumnClickedEventArgs) => {\n      let actionColumnClickedInfo: ActionColumnClickedInfo =\n        actionColumnEventArgs.data[0].id;\n      let rowData: any = actionColumnClickedInfo.rowData;\n      const column = actionColumnEventArgs.data[0].id.actionColumn;\n      if (column.ColumnId == 'Plus') {\n        let itemCount = rowData.ItemCount;\n        adaptableApi.gridApi.setCellValue(\n          'ItemCount',\n          itemCount + 1,\n          actionColumnClickedInfo.primaryKeyValue,\n          true\n        );\n      } else if (column.ColumnId == 'Minus') {\n        let itemCount = rowData.ItemCount;\n        adaptableApi.gridApi.setCellValue(\n          'ItemCount',\n          itemCount - 1,\n          actionColumnClickedInfo.primaryKeyValue,\n          true\n        );\n      } else if (column.ColumnId == 'Multiply') {\n        let multiplier: number =\n          rowData.Employee == 'Robert King' ||\n          rowData.Employee == 'Janet Leverling'\n            ? 2\n            : 3;\n        let newItemCost = rowData.ItemCost * multiplier;\n        newItemCost = Math.round(newItemCost * 100) / 100;\n        adaptableApi.gridApi.setCellValue(\n          'ItemCost',\n          newItemCost,\n          actionColumnClickedInfo.primaryKeyValue,\n          true\n        );\n      } else if (column.ColumnId == 'Action') {\n        adaptableApi.gridApi.deleteGridData([actionColumnClickedInfo.rowData]);\n      }\n    }\n  );\n\n  return { adaptableOptions, adaptableApi };\n};\n"});case 12:case"end":return n.stop()}}),n)})));e.default=function(n){return Object(a.useEffect)((function(){A().then((function(e){n.onReady&&n.onReady(e)}))}),[]),null}}}]);