(window.webpackJsonp=window.webpackJsonp||[]).push([[214],{"0v05":function(n,e,o){"use strict";o.r(e);var t=o("q1tI"),a=o("9Jkg"),r=o.n(a),i=(o("nX5y"),o("smsc")),s=o("ThKj"),l=o("hfKm"),u=o.n(l),m=o("2Eek"),d=o.n(m),C=o("XoMD"),p=o.n(C),c=o("Jo+v"),g=o.n(c),f=o("4mXO"),b=o.n(f),y=o("pLtp"),S=o.n(y),O=o("vYYK"),h=(o("PMha"),o("cUqQ"),o("5TJ6"),o("jWP/"),o("iMsr"),o("mbJ9")),v=o.n(h),D=o("mXS1");function A(n,e){var o=S()(n);if(b.a){var t=b()(n);e&&(t=t.filter((function(e){return g()(n,e).enumerable}))),o.push.apply(o,t)}return o}function I(n){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?A(Object(o),!0).forEach((function(e){Object(O.a)(n,e,o[e])})):p.a?d()(n,p()(o)):A(Object(o)).forEach((function(e){u()(n,e,g()(o,e))}))}return n}var L={Dashboard:{VisibleToolbars:["Layout"]},CalculatedColumn:{CalculatedColumns:[{ColumnExpression:'Col("ItemCost") / Col("ItemCount")',ColumnId:"Avg Item Cost"}]},Layout:{CurrentLayout:"Simple Layout",Layouts:[{Name:"Simple Layout",Columns:["OrderId","OrderDate","ItemCost","ItemCount","Avg Item Cost","CustomerReference","CompanyName","ContactName","InvoicedCost","ChangeLastOrder","OrderCost","PackageCost"]},{Name:"Sorting Layout",ColumnSorts:[{Column:"ShipName",SortOrder:"Ascending"},{Column:"ShipVia",SortOrder:"Descending"}],Columns:["OrderId","ShipVia","Freight","ShipName","ShipCountry","ShippedDate","CustomerReference"]},{Columns:["CustomerReference","ContactName","InvoicedCost","ChangeLastOrder","OrderCost","PackageCost","InvoicedCost","ChangeLastOrder","OrderCost","PackageCost"],ColumnSorts:[{Column:"ContactName",SortOrder:"Ascending"}],GroupedColumns:["Employee","ShipCountry"],Name:"Grouping Layout"},{Columns:["CustomerReference","ContactName","Employee","ShipCountry"],GroupedColumns:["ShipCountry"],PivotDetails:{PivotColumns:["Employee"],AggregationColumns:["InvoicedCost","ItemCost"]},Name:"Pivot Layout"}]},CustomSort:{CustomSorts:[{ColumnId:"ShipName",SortedValues:["La maison d'Asie","Que Del\xedcia","Sant\xe9 Gourmet"]}]}},N=o("6OHV"),P=function(){var n=new s.a;n.setUpAgGridLicence();var e=new N.a,o=JSON.parse(r()(i));n.convertExcelDates(o);var t=function(n,e){var o={primaryKey:"OrderId",userName:"Demo User",adaptableId:"Layout Demo",predefinedConfig:L,vendorGrid:I({},{columnDefs:n,rowData:e,enableRangeSelection:!0,suppressMenuHide:!0,floatingFilter:!0,columnTypes:{abColDefNumber:{},abColDefString:{},abColDefBoolean:{},abColDefDate:{},abColDefObject:{},abColDefNumberArray:{}}},{modules:D.a})};return{adaptableOptions:o,adaptableApi:v.a.init(o)}}(n.getBasicNorthwindColumnSchema(),o),a=t.adaptableOptions,l=t.adaptableApi;return l.eventApi.on("AdaptableReady",(function(){e.startTickingDataagGridPivot(a.vendorGrid,l,500)})),a.vendorGrid.onGridReady=function(n){n.columnApi.autoSizeAllColumns(),setTimeout((function(){return n.columnApi.autoSizeAllColumns()}),1),n.api.addEventListener("newColumnsLoaded",(function(){n.columnApi.autoSizeAllColumns()})),n.api.closeToolPanel()},{unload:function(){e.turnOffTicking()},code:"import '@adaptabletools/adaptable/index.css';\nimport '@adaptabletools/adaptable/themes/dark.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham-dark.css';\nimport Adaptable from '@adaptabletools/adaptable/agGrid';\nimport { GridOptions } from '@ag-grid-community/all-modules';\nimport {\n  AdaptableOptions,\n  PredefinedConfig,\n  AdaptableApi,\n} from '@adaptabletools/adaptable/types';\nimport { AllEnterpriseModules } from '@ag-grid-enterprise/all-modules';\n\nvar adaptableApi: AdaptableApi;\n\nconst demoConfig: PredefinedConfig = {\n  Dashboard: {\n    VisibleToolbars: ['Layout'],\n  },\n  CalculatedColumn: {\n    CalculatedColumns: [\n      {\n        ColumnExpression: 'Col(\"ItemCost\") / Col(\"ItemCount\")',\n        ColumnId: 'Avg Item Cost',\n      },\n    ],\n  },\n  Layout: {\n    CurrentLayout: 'Simple Layout',\n    Layouts: [\n      {\n        Name: 'Simple Layout',\n        Columns: [\n          'OrderId',\n          'OrderDate',\n          'ItemCost',\n          'ItemCount',\n          'Avg Item Cost',\n          'CustomerReference',\n          'CompanyName',\n          'ContactName',\n          'InvoicedCost',\n          'ChangeLastOrder',\n          'OrderCost',\n          'PackageCost',\n        ],\n      },\n      {\n        Name: 'Sorting Layout',\n        ColumnSorts: [\n          {\n            Column: 'ShipName',\n            SortOrder: 'Ascending',\n          },\n          { Column: 'ShipVia', SortOrder: 'Descending' },\n        ],\n        Columns: [\n          'OrderId',\n          'ShipVia',\n          'Freight',\n          'ShipName',\n          'ShipCountry',\n          'ShippedDate',\n          'CustomerReference',\n        ],\n      },\n      {\n        Columns: [\n          'CustomerReference',\n          'ContactName',\n          'InvoicedCost',\n          'ChangeLastOrder',\n          'OrderCost',\n          'PackageCost',\n          'InvoicedCost',\n          'ChangeLastOrder',\n          'OrderCost',\n          'PackageCost',\n        ],\n        ColumnSorts: [\n          {\n            Column: 'ContactName',\n            SortOrder: 'Ascending',\n          },\n        ],\n        GroupedColumns: ['Employee', 'ShipCountry'],\n        Name: 'Grouping Layout',\n      },\n      {\n        Columns: [\n          'CustomerReference',\n          'ContactName',\n          'Employee',\n          'ShipCountry',\n        ],\n        GroupedColumns: ['ShipCountry'],\n        PivotDetails: {\n          PivotColumns: ['Employee'],\n          AggregationColumns: ['InvoicedCost', 'ItemCost'],\n        },\n        Name: 'Pivot Layout',\n      },\n    ],\n  },\n  CustomSort: {\n    CustomSorts: [\n      {\n        ColumnId: 'ShipName',\n        SortedValues: [\"La maison d'Asie\", 'Que Del\xedcia', 'Sant\xe9 Gourmet'],\n      },\n    ],\n  },\n} as PredefinedConfig;\n\nexport default (columnDefs: any[], rowData: any[]) => {\n  const gridOptions: GridOptions = {\n    columnDefs,\n    rowData,\n    enableRangeSelection: true,\n    suppressMenuHide: true,\n    floatingFilter: true,\n    columnTypes: {\n      abColDefNumber: {},\n      abColDefString: {},\n      abColDefBoolean: {},\n      abColDefDate: {},\n      abColDefObject: {},\n      abColDefNumberArray: {},\n    },\n  };\n\n  const adaptableOptions: AdaptableOptions = {\n    primaryKey: 'OrderId',\n    userName: 'Demo User',\n    adaptableId: 'Layout Demo',\n    predefinedConfig: demoConfig,\n    vendorGrid: { ...gridOptions, modules: AllEnterpriseModules },\n  };\n  adaptableApi = Adaptable.init(adaptableOptions);\n\n  return { adaptableOptions, adaptableApi };\n};\n"}};e.default=function(n){return Object(t.useEffect)((function(){var e=P();n.onReady&&n.onReady(e)}),[]),null}}}]);