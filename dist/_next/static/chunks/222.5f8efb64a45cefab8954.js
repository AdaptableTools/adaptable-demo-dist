(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[222],{IFKJ:function(e,n,t){"use strict";t.r(n);var a,r=t("q1tI"),o=t("o0o1"),i=t.n(o),u=t("HaE+"),l=(t("nX5y"),t("smsc")),c=t("ThKj"),s=t("rePB"),d=(t("PMha"),t("cUqQ"),t("5TJ6"),t("jWP/"),t("iMsr"),t("mbJ9")),p=t.n(d),m=t("mXS1");function h(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function b(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?h(Object(t),!0).forEach((function(n){Object(s.a)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):h(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var f={Dashboard:{Tabs:[{Name:"Toolbars",Toolbars:["QuickSearch","Layout","Theme"]}]},Layout:{CurrentLayout:"Shipping",Layouts:[{Columns:["OrderId","Employee","ShipCountry","Freight"],ColumnSorts:[],Name:"Orders"},{Columns:["OrderId","ShipVia","Freight","ShipName","ShipCountry"],ColumnSorts:[{ColumnId:"ShipName",SortOrder:"Asc"}],Name:"Shipping"}]}},y=function(){var e=Object(u.a)(i.a.mark((function e(n,t){var r,o,u,l,c,s,d,h,y,g,S,C,O,D,k,T,A;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return A=function(){a.customSortApi.showCustomSortPopup()},T=function(){a.layoutApi.setLayout("Orders")},k=function(){var e=S.vendorGrid.api.getDisplayedRowAtIndex(0);e&&e.data&&a.gridApi.deleteGridData([e.data])},D=function(){a.dashboardApi.floatDashboard()},O=function(){var e=document.getElementById("txtQuickSearchText");null!=e&&(e.value="",a.quickSearchApi.clearQuickSearch())},C=function(){var e=document.getElementById("txtQuickSearchText");if(null!=e){var n=e.value;null!=n&&""!=n&&a.quickSearchApi.applyQuickSearch(n)}},r={columnDefs:n,rowData:t,enableRangeSelection:!0,sideBar:!0,suppressMenuHide:!0,autoGroupColumnDef:{sortable:!0},columnTypes:{abColDefNumber:{},abColDefString:{},abColDefBoolean:{},abColDefDate:{},abColDefObject:{},abColDefNumberArray:{}}},null!=(o=document.getElementById("aboveGridDiv"))&&(o.style.backgroundColor="lightGray",o.style.marginBottom="10px",o.style.padding="10px",(u=document.createElement("P")).innerHTML="<b>Using the Adaptable API</b><br/>",u.innerHTML+='Click "Run Quick Search" (or "Clear Quick Search") to call the equivalent Quick Search API functions.<br/>',u.innerHTML+="And use other buttons to set Dashboard visibility, load a layout and display a popup.",o.appendChild(u),(l=document.createElement("input")).id="txtQuickSearchText",l.name="txtQuickSearchText",l.style.marginRight="10px",o.appendChild(l),(c=document.createElement("BUTTON")).innerHTML="Run Quick Search",c.onclick=function(){return C()},c.style.marginRight="10px",o.appendChild(c),(s=document.createElement("BUTTON")).innerHTML="Clear Quick Search",s.onclick=function(){return O()},s.style.marginRight="50px",o.appendChild(s),(d=document.createElement("BUTTON")).innerHTML="Float Dashboard",d.onclick=function(){return D()},d.style.marginRight="10px",o.appendChild(d),(h=document.createElement("BUTTON")).innerHTML="Delete First Row",h.onclick=function(){return k()},h.style.marginRight="30px",o.appendChild(h),(y=document.createElement("BUTTON")).innerHTML="Load Orders Layout",y.onclick=function(){return T()},y.style.marginRight="10px",o.appendChild(y),(g=document.createElement("BUTTON")).innerHTML="Open Custom Sort Popup",g.onclick=function(){return A()},g.style.marginRight="10px",o.appendChild(g)),S={primaryKey:"OrderId",userName:"Demo User",adaptableId:"Adaptable Api Demo",predefinedConfig:f,vendorGrid:b(b({},r),{},{modules:m.a})},e.next=12,p.a.init(S);case 12:return a=e.sent,e.abrupt("return",{adaptableOptions:S,adaptableApi:a});case 14:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),g=Object(u.a)(i.a.mark((function e(){var n,t,a,r,o;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(n=new c.a).setUpAgGridLicence(),t=JSON.parse(JSON.stringify(l)),n.convertExcelData(t),a=n.getFilteredColumnSchema(),e.next=7,y(a,t);case 7:return r=e.sent,o=r.adaptableOptions,r.adaptableApi,o.vendorGrid.onGridReady=function(e){e.columnApi.autoSizeAllColumns(),setTimeout((function(){return e.columnApi.autoSizeAllColumns()}),1),e.api.addEventListener("newColumnsLoaded",(function(){e.columnApi.autoSizeAllColumns()})),e.api.closeToolPanel()},e.abrupt("return",{unload:function(){o.auditOptions=void 0},code:"import '@adaptabletools/adaptable/index.css';\nimport '@adaptabletools/adaptable/themes/dark.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham-dark.css';\nimport Adaptable from '@adaptabletools/adaptable/agGrid';\nimport { GridOptions } from '@ag-grid-community/all-modules';\nimport {\n  AdaptableOptions,\n  PredefinedConfig,\n  AdaptableApi,\n} from '@adaptabletools/adaptable/types';\nimport { AllEnterpriseModules } from '@ag-grid-enterprise/all-modules';\n\nvar adaptableApi: AdaptableApi;\n\nconst demoConfig: PredefinedConfig = {\n  Dashboard: {\n    Tabs: [\n      {\n        Name: 'Toolbars',\n        Toolbars: ['QuickSearch', 'Layout', 'Theme'],\n      },\n    ],\n  },\n  Layout: {\n    CurrentLayout: 'Shipping',\n    Layouts: [\n      {\n        Columns: ['OrderId', 'Employee', 'ShipCountry', 'Freight'],\n        ColumnSorts: [],\n        Name: 'Orders',\n      },\n      {\n        Columns: ['OrderId', 'ShipVia', 'Freight', 'ShipName', 'ShipCountry'],\n        ColumnSorts: [\n          {\n            ColumnId: 'ShipName',\n            SortOrder: 'Asc',\n          },\n        ],\n        Name: 'Shipping',\n      },\n    ],\n  },\n} as PredefinedConfig;\n\nexport default async (columnDefs: any[], rowData: any[]) => {\n  const gridOptions: GridOptions = {\n    columnDefs,\n    rowData,\n    enableRangeSelection: true,\n    sideBar: true,\n    suppressMenuHide: true,\n    autoGroupColumnDef: {\n      sortable: true,\n    },\n    columnTypes: {\n      abColDefNumber: {},\n      abColDefString: {},\n      abColDefBoolean: {},\n      abColDefDate: {},\n      abColDefObject: {},\n      abColDefNumberArray: {},\n    },\n  };\n\n  const testDiv: HTMLElement | null = document.getElementById('aboveGridDiv');\n  if (testDiv != null) {\n    testDiv.style.backgroundColor = 'lightGray';\n    testDiv.style.marginBottom = '10px';\n    testDiv.style.padding = '10px';\n    var para = document.createElement('P');\n    para.innerHTML = '<b>Using the Adaptable API</b><br/>';\n    para.innerHTML +=\n      'Click \"Run Quick Search\" (or \"Clear Quick Search\") to call the equivalent Quick Search API functions.<br/>';\n    para.innerHTML +=\n      'And use other buttons to set Dashboard visibility, load a layout and display a popup.';\n    testDiv.appendChild(para);\n\n    var textBox = document.createElement('input');\n    textBox.id = 'txtQuickSearchText';\n    textBox.name = 'txtQuickSearchText';\n    textBox.style.marginRight = '10px';\n    testDiv.appendChild(textBox);\n\n    var runQuickSearchButton = document.createElement('BUTTON');\n    runQuickSearchButton.innerHTML = 'Run Quick Search';\n    runQuickSearchButton.onclick = () => runQuickSearchViaAPI();\n    runQuickSearchButton.style.marginRight = '10px';\n    testDiv.appendChild(runQuickSearchButton);\n\n    var clearQuickSearchButton = document.createElement('BUTTON');\n    clearQuickSearchButton.innerHTML = 'Clear Quick Search';\n    clearQuickSearchButton.onclick = () => clearQuickSearchViaAPI();\n    clearQuickSearchButton.style.marginRight = '50px';\n    testDiv.appendChild(clearQuickSearchButton);\n\n    var floatDashboardButton = document.createElement('BUTTON');\n    floatDashboardButton.innerHTML = 'Float Dashboard';\n    floatDashboardButton.onclick = () => floatDashboard();\n    floatDashboardButton.style.marginRight = '10px';\n    testDiv.appendChild(floatDashboardButton);\n\n    var deleteFirstRowButton = document.createElement('BUTTON');\n    deleteFirstRowButton.innerHTML = 'Delete First Row';\n    deleteFirstRowButton.onclick = () => deleteFirstRow();\n    deleteFirstRowButton.style.marginRight = '30px';\n    testDiv.appendChild(deleteFirstRowButton);\n\n    var showOrdersLayoutButton = document.createElement('BUTTON');\n    showOrdersLayoutButton.innerHTML = 'Load Orders Layout';\n    showOrdersLayoutButton.onclick = () => showOrdersLayout();\n    showOrdersLayoutButton.style.marginRight = '10px';\n    testDiv.appendChild(showOrdersLayoutButton);\n\n    var showCustomSortPopupButton = document.createElement('BUTTON');\n    showCustomSortPopupButton.innerHTML = 'Open Custom Sort Popup';\n    showCustomSortPopupButton.onclick = () => showCustomSortPopup();\n    showCustomSortPopupButton.style.marginRight = '10px';\n    testDiv.appendChild(showCustomSortPopupButton);\n  }\n\n  const adaptableOptions: AdaptableOptions = {\n    primaryKey: 'OrderId',\n    userName: 'Demo User',\n    adaptableId: 'Adaptable Api Demo',\n    predefinedConfig: demoConfig,\n    vendorGrid: { ...gridOptions, modules: AllEnterpriseModules },\n  };\n  adaptableApi = await Adaptable.init(adaptableOptions);\n\n  function runQuickSearchViaAPI() {\n    const element: any = document.getElementById('txtQuickSearchText');\n    if (element != null) {\n      let searchValue = element.value;\n      if (searchValue != null && searchValue != '') {\n        adaptableApi.quickSearchApi.applyQuickSearch(searchValue);\n      }\n    }\n  }\n\n  function clearQuickSearchViaAPI() {\n    const element: any = document.getElementById('txtQuickSearchText');\n    if (element != null) {\n      element.value = '';\n      adaptableApi.quickSearchApi.clearQuickSearch();\n    }\n  }\n\n  function floatDashboard() {\n    // use api method\n    adaptableApi.dashboardApi.floatDashboard();\n  }\n\n  function deleteFirstRow() {\n    let firstRow: any = adaptableOptions.vendorGrid.api.getDisplayedRowAtIndex(\n      0\n    );\n    if (firstRow && firstRow.data) {\n      adaptableApi.gridApi.deleteGridData([firstRow.data]);\n    }\n  }\n\n  function showOrdersLayout() {\n    adaptableApi.layoutApi.setLayout('Orders');\n  }\n\n  function showCustomSortPopup() {\n    adaptableApi.customSortApi.showCustomSortPopup();\n  }\n\n  return { adaptableOptions, adaptableApi };\n};\n"});case 12:case"end":return e.stop()}}),e)})));n.default=function(e){return Object(r.useEffect)((function(){g().then((function(n){e.onReady&&e.onReady(n)}))}),[]),null}}}]);