(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[234],{x4ZE:function(e,n,o){"use strict";o.r(n);var t,a=o("q1tI"),r=o("o0o1"),l=o.n(r),i=o("HaE+"),s=(o("nX5y"),o("smsc")),d=o("ThKj"),u=o("rePB"),p=(o("PMha"),o("cUqQ"),o("5TJ6"),o("jWP/"),o("iMsr"),o("mbJ9")),m=o.n(p),c=o("mXS1");function b(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,t)}return o}function f(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?b(Object(o),!0).forEach((function(n){Object(u.a)(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):b(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}var C={Dashboard:{VisibleButtons:["ColumnInfo"]},CustomSort:{CustomSorts:[{ColumnId:"Employee",SortedValues:["Margaret Peacock","Janet Leverling","Nancy Davolio"]},{ColumnId:"ContactName",SortedValues:["Palle Ibsen","Jaime Yorres","Aria Cruz","Fran Wilson"]}]},FormatColumn:{FormatColumns:[{Scope:{ColumnIds:["Employee"]},Style:{BackColor:"#ffffcc"}}]},ConditionalStyle:{ConditionalStyles:[{Scope:{ColumnIds:["Employee"]},Style:{FontWeight:"Bold",ForeColor:"#8b0000"},Expression:'[Employee] = "UK Team"'}]},CellValidation:{CellValidations:[{ActionMode:"Stop Edit",Scope:{ColumnIds:["Employee"]},Predicate:{PredicateId:"Any"}}]}},y=function(){var e=Object(i.a)(l.a.mark((function e(n,o){var a;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a={primaryKey:"OrderId",userName:"Demo User",adaptableId:"Column Info Demo",predefinedConfig:C,vendorGrid:f(f({},{columnDefs:n,rowData:o,enableRangeSelection:!0,sideBar:!0,suppressMenuHide:!0,autoGroupColumnDef:{sortable:!0},columnTypes:{abColDefNumber:{},abColDefString:{},abColDefBoolean:{},abColDefDate:{},abColDefObject:{},abColDefNumberArray:{}}}),{},{modules:c.a})},e.next=4,m.a.init(a);case 4:return t=e.sent,e.abrupt("return",{adaptableOptions:a,adaptableApi:t});case 6:case"end":return e.stop()}}),e)})));return function(n,o){return e.apply(this,arguments)}}(),g=Object(i.a)(l.a.mark((function e(){var n,o,t,a,r;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(n=new d.a).setUpAgGridLicence(),o=JSON.parse(JSON.stringify(s)),n.convertExcelData(o),t=n.getConditionalstyleNorthwindColumnSchema(),e.next=7,y(t,o);case 7:return a=e.sent,r=a.adaptableOptions,a.adaptableApi,r.vendorGrid.onGridReady=function(e){e.columnApi.autoSizeAllColumns(),setTimeout((function(){return e.columnApi.autoSizeAllColumns()}),1),e.api.addEventListener("newColumnsLoaded",(function(){e.columnApi.autoSizeAllColumns()})),e.api.closeToolPanel()},e.abrupt("return",{code:"import '@adaptabletools/adaptable/index.css';\nimport '@adaptabletools/adaptable/themes/dark.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham-dark.css';\nimport Adaptable from '@adaptabletools/adaptable/agGrid';\nimport { GridOptions } from '@ag-grid-community/all-modules';\nimport {\n  AdaptableOptions,\n  PredefinedConfig,\n  AdaptableApi,\n} from '@adaptabletools/adaptable/types';\nimport { AllEnterpriseModules } from '@ag-grid-enterprise/all-modules';\n\nvar adaptableApi: AdaptableApi;\n\nconst demoConfig: PredefinedConfig = {\n  Dashboard: {\n    VisibleButtons: ['ColumnInfo'],\n  },\n  CustomSort: {\n    CustomSorts: [\n      {\n        ColumnId: 'Employee',\n        SortedValues: ['Margaret Peacock', 'Janet Leverling', 'Nancy Davolio'],\n      },\n      {\n        ColumnId: 'ContactName',\n        SortedValues: [\n          'Palle Ibsen',\n          'Jaime Yorres',\n          'Aria Cruz',\n          'Fran Wilson',\n        ],\n      },\n    ],\n  },\n  FormatColumn: {\n    FormatColumns: [\n      {\n        Scope: {\n          ColumnIds: ['Employee'],\n        },\n        Style: {\n          BackColor: '#ffffcc',\n        },\n      },\n    ],\n  },\n  ConditionalStyle: {\n    ConditionalStyles: [\n      {\n        Scope: {\n          ColumnIds: ['Employee'],\n        },\n\n        Style: {\n          FontWeight: 'Bold',\n          ForeColor: '#8b0000',\n        },\n        Expression: '[Employee] = \"UK Team\"', // TODO Release7 this wont workg but....{\n      },\n    ],\n  },\n  CellValidation: {\n    CellValidations: [\n      {\n        ActionMode: 'Stop Edit',\n        Scope: {\n          ColumnIds: ['Employee'],\n        },\n        Predicate: {\n          PredicateId: 'Any', // ?? is that right?\n        },\n      },\n    ],\n  },\n} as PredefinedConfig;\n\nexport default async (columnDefs: any[], rowData: any[]) => {\n  const gridOptions: GridOptions = {\n    columnDefs,\n    rowData,\n    enableRangeSelection: true,\n    sideBar: true,\n    suppressMenuHide: true,\n    autoGroupColumnDef: {\n      sortable: true,\n    },\n    columnTypes: {\n      abColDefNumber: {},\n      abColDefString: {},\n      abColDefBoolean: {},\n      abColDefDate: {},\n      abColDefObject: {},\n      abColDefNumberArray: {},\n    },\n  };\n\n  const adaptableOptions: AdaptableOptions = {\n    primaryKey: 'OrderId',\n    userName: 'Demo User',\n    adaptableId: 'Column Info Demo',\n    predefinedConfig: demoConfig,\n    vendorGrid: { ...gridOptions, modules: AllEnterpriseModules },\n  };\n  adaptableApi = await Adaptable.init(adaptableOptions);\n\n  return { adaptableOptions, adaptableApi };\n};\n"});case 12:case"end":return e.stop()}}),e)})));n.default=function(e){return Object(a.useEffect)((function(){g().then((function(n){e.onReady&&e.onReady(n)}))}),[]),null}}}]);