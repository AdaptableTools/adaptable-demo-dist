(window.webpackJsonp=window.webpackJsonp||[]).push([[183,12],{"2Eek":function(n,e,o){n.exports=o("W7oM")},"7m0m":function(n,e,o){var r=o("Y7ZC"),a=o("uplh"),t=o("NsO/"),i=o("vwuL"),l=o("IP1Z");r(r.S,"Object",{getOwnPropertyDescriptors:function(n){for(var e,o,r=t(n),s=i.f,d=a(r),p={},u=0;d.length>u;)void 0!==(o=s(r,e=d[u++]))&&l(p,e,o);return p}})},W7oM:function(n,e,o){o("nZgG");var r=o("WEpk").Object;n.exports=function(n,e){return r.defineProperties(n,e)}},XoMD:function(n,e,o){n.exports=o("hYAz")},hYAz:function(n,e,o){o("7m0m"),n.exports=o("WEpk").Object.getOwnPropertyDescriptors},nZgG:function(n,e,o){var r=o("Y7ZC");r(r.S+r.F*!o("jmDH"),"Object",{defineProperties:o("fpC5")})},uplh:function(n,e,o){var r=o("ar/p"),a=o("mqlF"),t=o("5K7Z"),i=o("5T2Y").Reflect;n.exports=i&&i.ownKeys||function(n){var e=r.f(t(n)),o=a.f;return o?e.concat(o(n)):e}},x7Bl:function(n,e,o){"use strict";o.r(e);var r=o("q1tI"),a=o("9Jkg"),t=o.n(a),i=(o("nX5y"),o("smsc")),l=o("ThKj"),s=o("hfKm"),d=o.n(s),p=o("2Eek"),u=o.n(p),m=o("XoMD"),C=o.n(m),c=o("Jo+v"),f=o.n(c),g=o("4mXO"),S=o.n(g),h=o("pLtp"),y=o.n(h),b=o("vYYK"),O=(o("PMha"),o("cUqQ"),o("5TJ6"),o("jWP/"),o("iMsr"),o("mbJ9")),E=o.n(O),I=o("mXS1");function v(n,e){var o=y()(n);if(S.a){var r=S()(n);e&&(r=r.filter((function(e){return f()(n,e).enumerable}))),o.push.apply(o,r)}return o}function F(n){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?v(Object(o),!0).forEach((function(e){Object(b.a)(n,e,o[e])})):C.a?u()(n,C()(o)):v(Object(o)).forEach((function(e){d()(n,e,f()(o,e))}))}return n}var D={Dashboard:{VisibleToolbars:["SmartEdit","Export","Layout","QuickSearch"],VisibleButtons:["Dashboard","ColumnChooser","AdvancedSearch"]},SmartEdit:{SmartEditValue:10},Export:{CurrentReport:"High Freight",Reports:[{Name:"High Freight",ReportColumnScope:"BespokeColumns",ReportRowScope:"ExpressionRows",ColumnIds:["OrderId","Freight","Employee","PackageCost","InvoicedCost"],Expression:{RangeExpressions:[{ColumnId:"Freight",Ranges:[{Operand1:"500",Operand1Type:"Value",Operand2:"",Operand2Type:"Value",Operator:"GreaterThan"}]}]}}]},CustomSort:{CustomSorts:[{ColumnId:"Employee",SortedValues:["Margaret Peacock","Steven Buchanan","Janet Leverling"]}]},ConditionalStyle:{ConditionalStyles:[{ColumnId:"ChangeLastOrder",Style:{ForeColor:"#008000"},ConditionalStyleScope:"Column",Expression:{FilterExpressions:[{ColumnId:"ChangeLastOrder",Filters:["Positive"]}]}},{ColumnId:"ChangeLastOrder",Style:{ForeColor:"#ff0000"},ConditionalStyleScope:"Column",Expression:{FilterExpressions:[{ColumnId:"ChangeLastOrder",Filters:["Negative"]}]}},{Style:{BackColor:"#ffffcc",FontStyle:"Italic",ForeColor:"#000000"},ConditionalStyleScope:"Row",Expression:{RangeExpressions:[{ColumnId:"InvoicedCost",Ranges:[{Operand1:"2000",Operand1Type:"Value",Operand2:"",Operand2Type:"Value",Operator:"GreaterThan"}]}]}}]},Layout:{CurrentLayout:"Orders View",Layouts:[{Columns:["OrderId","OrderDate","CustomerReference","CompanyName","ContactName","Employee","InvoicedCost","ChangeLastOrder","OrderCost","PackageCost","ItemCost","ItemCount"],ColumnSorts:[],Name:"Orders View"},{Columns:["OrderId","ShipVia","Freight","ShipName","ShipCountry","ShippedDate","CustomerReference"],ColumnSorts:[{Column:"ShipName",SortOrder:"Ascending"}],Name:"Shipping View"}]},FormatColumn:{FormatColumns:[{ColumnId:"OrderId",Style:{BackColor:"#d4fb79",ForeColor:"#8b0000",FontWeight:"Normal",FontStyle:"Normal",ClassName:""}}]},QuickSearch:{QuickSearchText:"g*",DisplayAction:"ShowRowAndHighlightCell",Style:{BackColor:"#ffff00",ForeColor:"#8b0000"}}},A=function(){var n=new l.a;n.setUpAgGridLicence();var e=JSON.parse(t()(i));n.convertExcelDates(e);var o=function(n,e){var o={primaryKey:"OrderId",userName:"Demo User",adaptableId:"Predefined Config Demo",predefinedConfig:D,vendorGrid:F({},{columnDefs:n,rowData:e,enableRangeSelection:!0,sideBar:!0,suppressMenuHide:!0,floatingFilter:!0,columnTypes:{abColDefNumber:{},abColDefString:{},abColDefBoolean:{},abColDefDate:{},abColDefObject:{},abColDefNumberArray:{}}},{modules:I.a})};return{adaptableOptions:o,adaptableApi:E.a.init(o)}}(n.getBasicNorthwindColumnSchema(),e),r=o.adaptableOptions;o.adaptableApi;return r.vendorGrid.onGridReady=function(n){n.columnApi.autoSizeAllColumns(),setTimeout((function(){return n.columnApi.autoSizeAllColumns()}),1),n.api.addEventListener("newColumnsLoaded",(function(){n.columnApi.autoSizeAllColumns()})),n.api.closeToolPanel()},{code:"import '@adaptabletools/adaptable/index.css';\nimport '@adaptabletools/adaptable/themes/dark.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham-dark.css';\nimport Adaptable from '@adaptabletools/adaptable/agGrid';\nimport { GridOptions } from '@ag-grid-community/all-modules';\nimport {\n  AdaptableOptions,\n  PredefinedConfig,\n  AdaptableApi,\n} from '@adaptabletools/adaptable/types';\nimport { AllEnterpriseModules } from '@ag-grid-enterprise/all-modules';\n\nvar adaptableApi: AdaptableApi;\n\nconst demoConfig: PredefinedConfig = {\n  Dashboard: {\n    VisibleToolbars: ['SmartEdit', 'Export', 'Layout', 'QuickSearch'],\n    VisibleButtons: ['Dashboard', 'ColumnChooser', 'AdvancedSearch'],\n  },\n  SmartEdit: {\n    SmartEditValue: 10,\n  },\n  Export: {\n    CurrentReport: 'High Freight',\n    Reports: [\n      {\n        Name: 'High Freight',\n        ReportColumnScope: 'BespokeColumns',\n        ReportRowScope: 'ExpressionRows',\n        ColumnIds: [\n          'OrderId',\n          'Freight',\n          'Employee',\n          'PackageCost',\n          'InvoicedCost',\n        ],\n        Expression: {\n          RangeExpressions: [\n            {\n              ColumnId: 'Freight',\n              Ranges: [\n                {\n                  Operand1: '500',\n                  Operand1Type: 'Value',\n                  Operand2: '',\n                  Operand2Type: 'Value',\n                  Operator: 'GreaterThan',\n                },\n              ],\n            },\n          ],\n        },\n      },\n    ],\n  },\n  CustomSort: {\n    CustomSorts: [\n      {\n        ColumnId: 'Employee',\n        SortedValues: [\n          'Margaret Peacock',\n          'Steven Buchanan',\n          'Janet Leverling',\n        ],\n      },\n    ],\n  },\n  ConditionalStyle: {\n    ConditionalStyles: [\n      {\n        ColumnId: 'ChangeLastOrder',\n        Style: {\n          ForeColor: '#008000',\n        },\n        ConditionalStyleScope: 'Column',\n        Expression: {\n          FilterExpressions: [\n            {\n              ColumnId: 'ChangeLastOrder',\n              Filters: ['Positive'],\n            },\n          ],\n        },\n      },\n      {\n        ColumnId: 'ChangeLastOrder',\n        Style: {\n          ForeColor: '#ff0000',\n        },\n        ConditionalStyleScope: 'Column',\n        Expression: {\n          FilterExpressions: [\n            {\n              ColumnId: 'ChangeLastOrder',\n              Filters: ['Negative'],\n            },\n          ],\n        },\n      },\n      {\n        Style: {\n          BackColor: '#ffffcc',\n          FontStyle: 'Italic',\n          ForeColor: '#000000',\n        },\n        ConditionalStyleScope: 'Row',\n        Expression: {\n          RangeExpressions: [\n            {\n              ColumnId: 'InvoicedCost',\n              Ranges: [\n                {\n                  Operand1: '2000',\n                  Operand1Type: 'Value',\n                  Operand2: '',\n                  Operand2Type: 'Value',\n                  Operator: 'GreaterThan',\n                },\n              ],\n            },\n          ],\n        },\n      },\n    ],\n  },\n  Layout: {\n    CurrentLayout: 'Orders View',\n    Layouts: [\n      {\n        Columns: [\n          'OrderId',\n          'OrderDate',\n          'CustomerReference',\n          'CompanyName',\n          'ContactName',\n          'Employee',\n          'InvoicedCost',\n          'ChangeLastOrder',\n          'OrderCost',\n          'PackageCost',\n          'ItemCost',\n          'ItemCount',\n        ],\n        ColumnSorts: [],\n        Name: 'Orders View',\n      },\n      {\n        Columns: [\n          'OrderId',\n          'ShipVia',\n          'Freight',\n          'ShipName',\n          'ShipCountry',\n          'ShippedDate',\n          'CustomerReference',\n        ],\n        ColumnSorts: [\n          {\n            Column: 'ShipName',\n            SortOrder: 'Ascending',\n          },\n        ],\n        Name: 'Shipping View',\n      },\n    ],\n  },\n  FormatColumn: {\n    FormatColumns: [\n      {\n        ColumnId: 'OrderId',\n        Style: {\n          BackColor: '#d4fb79',\n          ForeColor: '#8b0000',\n          FontWeight: 'Normal',\n          FontStyle: 'Normal',\n          ClassName: '',\n        },\n      },\n    ],\n  },\n  QuickSearch: {\n    QuickSearchText: 'g*',\n    DisplayAction: 'ShowRowAndHighlightCell',\n    Style: {\n      BackColor: '#ffff00',\n      ForeColor: '#8b0000',\n    },\n  },\n} as PredefinedConfig;\n\nexport default (columnDefs: any[], rowData: any[]) => {\n  const gridOptions: GridOptions = {\n    columnDefs,\n    rowData,\n    enableRangeSelection: true,\n    sideBar: true,\n    suppressMenuHide: true,\n    floatingFilter: true,\n    columnTypes: {\n      abColDefNumber: {},\n      abColDefString: {},\n      abColDefBoolean: {},\n      abColDefDate: {},\n      abColDefObject: {},\n      abColDefNumberArray: {},\n    },\n  };\n\n  const adaptableOptions: AdaptableOptions = {\n    primaryKey: 'OrderId',\n    userName: 'Demo User',\n    adaptableId: 'Predefined Config Demo',\n    predefinedConfig: demoConfig,\n    vendorGrid: { ...gridOptions, modules: AllEnterpriseModules },\n  };\n  adaptableApi = Adaptable.init(adaptableOptions);\n\n  return { adaptableOptions, adaptableApi };\n};\n"}};e.default=function(n){return Object(r.useEffect)((function(){var e=A();n.onReady&&n.onReady(e)}),[]),null}}}]);