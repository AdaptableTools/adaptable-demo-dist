(window.webpackJsonp=window.webpackJsonp||[]).push([[216],{WNo1:function(e,a,n){"use strict";n.r(a);var t=n("q1tI"),o=(n("nX5y"),n("ThKj")),r=n("6OHV"),i=n("hfKm"),l=n.n(i),d=n("2Eek"),p=n.n(d),s=n("XoMD"),u=n.n(s),m=n("Jo+v"),b=n.n(m),f=n("4mXO"),c=n.n(f),g=n("pLtp"),D=n.n(g),A=n("vYYK"),C=(n("PMha"),n("cUqQ"),n("5TJ6"),n("jWP/"),n("iMsr"),n("mbJ9")),y=n.n(C),w=n("mXS1");function O(e,a){var n=D()(e);if(c.a){var t=c()(e);a&&(t=t.filter((function(a){return b()(e,a).enumerable}))),n.push.apply(n,t)}return n}function v(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?O(Object(n),!0).forEach((function(a){Object(A.a)(e,a,n[a])})):u.a?p()(e,u()(n)):O(Object(n)).forEach((function(a){l()(e,a,b()(n,a))}))}return e}var h={UpdatedRow:{EnableUpdatedRow:!0,JumpToRow:!0,NeutralColor:"lightblue"}},R=function(){var e=new o.a;e.setUpAgGridLicence();var a=new r.a,n=e.getTradeSchema(),t=function(e,a){var n={primaryKey:"tradeId",userName:"Demo User",adaptableId:"Updated Rows Demo",predefinedConfig:h,vendorGrid:v({},{columnDefs:e,rowData:a,enableRangeSelection:!0,sideBar:!0,suppressMenuHide:!0,floatingFilter:!0,columnTypes:{abColDefNumber:{},abColDefString:{},abColDefBoolean:{},abColDefDate:{},abColDefObject:{},abColDefNumberArray:{}}},{modules:w.a})};return{adaptableOptions:n,adaptableApi:y.a.init(n)}}(n,e.getTrades(200)),i=t.adaptableOptions,l=t.adaptableApi;return i.vendorGrid.onGridReady=function(e){e.columnApi.autoSizeAllColumns(),setTimeout((function(){return e.columnApi.autoSizeAllColumns()}),1),e.api.addEventListener("newColumnsLoaded",(function(){e.columnApi.autoSizeAllColumns()})),e.api.closeToolPanel()},l.eventApi.on("AdaptableReady",(function(){a.startTickingDataagGridTradesUpdateData(i.vendorGrid,l,4e3,200)})),{unload:function(){a.turnOffTicking()},code:"import '@adaptabletools/adaptable/index.css';\nimport '@adaptabletools/adaptable/themes/dark.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham-dark.css';\nimport Adaptable from '@adaptabletools/adaptable/agGrid';\nimport { GridOptions } from '@ag-grid-community/all-modules';\nimport {\n  AdaptableOptions,\n  PredefinedConfig,\n  AdaptableApi,\n} from '@adaptabletools/adaptable/types';\nimport { AllEnterpriseModules } from '@ag-grid-enterprise/all-modules';\n\nvar adaptableApi: AdaptableApi;\n\nconst demoConfig: PredefinedConfig = {\n  UpdatedRow: {\n    EnableUpdatedRow: true,\n    JumpToRow: true,\n    NeutralColor: 'lightblue',\n  },\n} as PredefinedConfig;\n\nexport default (columnDefs: any[], rowData: any[]) => {\n  const gridOptions: GridOptions = {\n    columnDefs,\n    rowData,\n    enableRangeSelection: true,\n    sideBar: true,\n    suppressMenuHide: true,\n    floatingFilter: true,\n    columnTypes: {\n      abColDefNumber: {},\n      abColDefString: {},\n      abColDefBoolean: {},\n      abColDefDate: {},\n      abColDefObject: {},\n      abColDefNumberArray: {},\n    },\n  };\n\n  const adaptableOptions: AdaptableOptions = {\n    primaryKey: 'tradeId',\n    userName: 'Demo User',\n    adaptableId: 'Updated Rows Demo',\n    predefinedConfig: demoConfig,\n    vendorGrid: { ...gridOptions, modules: AllEnterpriseModules },\n  };\n  adaptableApi = Adaptable.init(adaptableOptions);\n\n  return { adaptableOptions, adaptableApi };\n};\n"}};a.default=function(e){return Object(t.useEffect)((function(){var a=R();e.onReady&&e.onReady(a)}),[]),null}}}]);