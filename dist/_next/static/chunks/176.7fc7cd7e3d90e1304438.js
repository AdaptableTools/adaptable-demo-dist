(window.webpackJsonp=window.webpackJsonp||[]).push([[176],{"2Eek":function(n,e,o){n.exports=o("W7oM")},"7m0m":function(n,e,o){var t=o("Y7ZC"),a=o("uplh"),l=o("NsO/"),r=o("vwuL"),i=o("IP1Z");t(t.S,"Object",{getOwnPropertyDescriptors:function(n){for(var e,o,t=l(n),s=r.f,p=a(t),m={},u=0;p.length>u;)void 0!==(o=s(t,e=p[u++]))&&i(m,e,o);return m}})},W7oM:function(n,e,o){o("nZgG");var t=o("WEpk").Object;n.exports=function(n,e){return t.defineProperties(n,e)}},XoMD:function(n,e,o){n.exports=o("hYAz")},hYAz:function(n,e,o){o("7m0m"),n.exports=o("WEpk").Object.getOwnPropertyDescriptors},nZgG:function(n,e,o){var t=o("Y7ZC");t(t.S+t.F*!o("jmDH"),"Object",{defineProperties:o("fpC5")})},uplh:function(n,e,o){var t=o("ar/p"),a=o("mqlF"),l=o("5K7Z"),r=o("5T2Y").Reflect;n.exports=r&&r.ownKeys||function(n){var e=t.f(l(n)),o=a.f;return o?e.concat(o(n)):e}},veCD:function(n,e,o){"use strict";o.r(e);var t=o("q1tI"),a=o("9Jkg"),l=o.n(a),r=(o("nX5y"),o("smsc")),i=o("ThKj"),s=o("hfKm"),p=o.n(s),m=o("2Eek"),u=o.n(m),d=o("XoMD"),c=o.n(d),C=o("Jo+v"),f=o.n(C),b=o("4mXO"),y=o.n(b),g=o("pLtp"),I=o.n(g),v=o("vYYK"),E=(o("PMha"),o("cUqQ"),o("5TJ6"),o("jWP/"),o("iMsr"),o("mbJ9")),F=o.n(E),O=o("mXS1");function S(n,e){var o=I()(n);if(y.a){var t=y()(n);e&&(t=t.filter((function(e){return f()(n,e).enumerable}))),o.push.apply(o,t)}return o}function D(n){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?S(Object(o),!0).forEach((function(e){Object(v.a)(n,e,o[e])})):c.a?u()(n,c()(o)):S(Object(o)).forEach((function(e){p()(n,e,f()(o,e))}))}return n}var R={UserFilter:{UserFilters:[{Name:"My Team",ColumnId:"Employee",Expression:{ColumnValueExpressions:[{ColumnDisplayValues:["Janet Leverling","Michael Suyama","Robert King"],ColumnId:"Employee"}]}},{Name:"Small Invoices",ColumnId:"InvoicedCost",Expression:{RangeExpressions:[{ColumnId:"InvoicedCost",Ranges:[{Operand1:"300",Operand1Type:"Value",Operand2:"",Operand2Type:"Value",Operator:"LessThan"}]}]}}]},ColumnFilter:{ColumnFilters:[{ColumnId:"Employee",Filter:{FilterExpressions:[{ColumnId:"Employee",Filters:["My Team"]}]}}]},ConditionalStyle:{ConditionalStyles:[{ColumnCategoryId:"",ColumnId:"",ConditionalStyleScope:"Row",Expression:{FilterExpressions:[{ColumnId:"InvoicedCost",Filters:["Small Invoices"]}]},Style:{BackColor:"#ffffcc",FontStyle:"Italic",FontWeight:"Normal",ForeColor:"#800080"}}]},Export:{CurrentReport:"Team Invoices",Reports:[{Expression:{FilterExpressions:[{ColumnId:"InvoicedCost",Filters:["Small Invoices"]},{ColumnId:"Employee",Filters:["My Team"]}]},Name:"Team Invoices",ReportColumnScope:"AllColumns",ReportRowScope:"ExpressionRows"}]},Dashboard:{VisibleToolbars:["ColumnFilter","Export"]}},x=function(){var n=new i.a;n.setUpAgGridLicence();var e=JSON.parse(l()(r)),o=function(n,e){var o={primaryKey:"OrderId",userName:"Demo User",adaptableId:"User Filters Demo",predefinedConfig:R,vendorGrid:D({},{columnDefs:n,rowData:e,animateRows:!0,enableRangeSelection:!0,sideBar:!0,suppressMenuHide:!0,floatingFilter:!0,statusBar:{statusPanels:[{statusPanel:"agTotalRowCountComponent",align:"left"},{statusPanel:"agFilteredRowCountComponent"}]},columnTypes:{abColDefNumber:{},abColDefString:{},abColDefBoolean:{},abColDefDate:{},abColDefObject:{},abColDefNumberArray:{}}},{modules:O.a})};return{adaptableOptions:o,adaptableApi:F.a.init(o)}}(n.getBasicNorthwindColumnSchema(),e),t=o.adaptableOptions;o.adaptableApi;return t.vendorGrid.onGridReady=function(n){n.columnApi.autoSizeAllColumns(),setTimeout((function(){return n.columnApi.autoSizeAllColumns()}),1),n.api.addEventListener("newColumnsLoaded",(function(){n.columnApi.autoSizeAllColumns()})),n.api.closeToolPanel()},{code:"import '@adaptabletools/adaptable/index.css';\nimport '@adaptabletools/adaptable/themes/dark.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham-dark.css';\nimport Adaptable from '@adaptabletools/adaptable/agGrid';\nimport { GridOptions } from '@ag-grid-community/all-modules';\nimport {\n  AdaptableOptions,\n  PredefinedConfig,\n  AdaptableApi,\n} from '@adaptabletools/adaptable/types';\nimport { AllEnterpriseModules } from '@ag-grid-enterprise/all-modules';\n\nvar adaptableApi: AdaptableApi;\n\nconst demoConfig: PredefinedConfig = {\n  UserFilter: {\n    UserFilters: [\n      {\n        Name: 'My Team',\n        ColumnId: 'Employee',\n        Expression: {\n          ColumnValueExpressions: [\n            {\n              ColumnDisplayValues: [\n                'Janet Leverling',\n                'Michael Suyama',\n                'Robert King',\n              ],\n              ColumnId: 'Employee',\n            },\n          ],\n        },\n      },\n      {\n        Name: 'Small Invoices',\n        ColumnId: 'InvoicedCost',\n        Expression: {\n          RangeExpressions: [\n            {\n              ColumnId: 'InvoicedCost',\n              Ranges: [\n                {\n                  Operand1: '300',\n                  Operand1Type: 'Value',\n                  Operand2: '',\n                  Operand2Type: 'Value',\n                  Operator: 'LessThan',\n                },\n              ],\n            },\n          ],\n        },\n      },\n    ],\n  },\n  ColumnFilter: {\n    ColumnFilters: [\n      {\n        ColumnId: 'Employee',\n        Filter: {\n          FilterExpressions: [\n            {\n              ColumnId: 'Employee',\n              Filters: ['My Team'],\n            },\n          ],\n        },\n      },\n    ],\n  },\n  ConditionalStyle: {\n    ConditionalStyles: [\n      {\n        ColumnCategoryId: '',\n        ColumnId: '',\n        ConditionalStyleScope: 'Row',\n        Expression: {\n          FilterExpressions: [\n            {\n              ColumnId: 'InvoicedCost',\n              Filters: ['Small Invoices'],\n            },\n          ],\n        },\n        Style: {\n          BackColor: '#ffffcc',\n          FontStyle: 'Italic',\n          FontWeight: 'Normal',\n          ForeColor: '#800080',\n        },\n      },\n    ],\n  },\n  Export: {\n    CurrentReport: 'Team Invoices',\n    Reports: [\n      {\n        Expression: {\n          FilterExpressions: [\n            {\n              ColumnId: 'InvoicedCost',\n              Filters: ['Small Invoices'],\n            },\n            {\n              ColumnId: 'Employee',\n              Filters: ['My Team'],\n            },\n          ],\n        },\n        Name: 'Team Invoices',\n        ReportColumnScope: 'AllColumns',\n        ReportRowScope: 'ExpressionRows',\n      },\n    ],\n  },\n  Dashboard: {\n    VisibleToolbars: ['ColumnFilter', 'Export'],\n  },\n} as PredefinedConfig;\n\nexport default (columnDefs: any[], rowData: any[]) => {\n  let gridOptions: GridOptions = {\n    columnDefs,\n    rowData,\n    animateRows: true,\n    enableRangeSelection: true,\n    sideBar: true,\n    suppressMenuHide: true,\n    floatingFilter: true,\n    statusBar: {\n      statusPanels: [\n        { statusPanel: 'agTotalRowCountComponent', align: 'left' },\n        { statusPanel: 'agFilteredRowCountComponent' },\n      ],\n    },\n    columnTypes: {\n      abColDefNumber: {},\n      abColDefString: {},\n      abColDefBoolean: {},\n      abColDefDate: {},\n      abColDefObject: {},\n      abColDefNumberArray: {},\n    },\n  };\n\n  const adaptableOptions: AdaptableOptions = {\n    primaryKey: 'OrderId',\n    userName: 'Demo User',\n    adaptableId: 'User Filters Demo',\n    predefinedConfig: demoConfig,\n    vendorGrid: { ...gridOptions, modules: AllEnterpriseModules },\n  };\n  adaptableApi = Adaptable.init(adaptableOptions);\n\n  return { adaptableOptions, adaptableApi };\n};\n"}};e.default=function(n){return Object(t.useEffect)((function(){var e=x();n.onReady&&n.onReady(e)}),[]),null}}}]);