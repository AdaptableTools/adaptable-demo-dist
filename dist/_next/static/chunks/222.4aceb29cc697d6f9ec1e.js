(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[222],{o19K:function(e,t,n){"use strict";n.r(t);var a,o=n("q1tI"),r=n("o0o1"),i=n.n(r),l=n("HaE+"),s=(n("nX5y"),n("smsc")),d=n("ThKj"),u=n("rePB"),p=(n("PMha"),n("cUqQ"),n("5TJ6"),n("jWP/"),n("iMsr"),n("mbJ9")),c=n.n(p),b=n("mXS1");function m(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function f(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?m(Object(n),!0).forEach((function(t){Object(u.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):m(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var g=function(){var e=Object(l.a)(i.a.mark((function e(t,n){var o;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o={primaryKey:"OrderId",userName:"Demo User",adaptableId:"Audit Log Demo",auditOptions:{auditUserStateChanges:{auditToConsole:!0},auditFunctionsApplied:{auditToConsole:!0,auditToHttpChannel:!0},auditCellEdits:{auditToConsole:!0,auditAsEvent:!0}},vendorGrid:f(f({},{columnDefs:t,rowData:n,enableRangeSelection:!0,sideBar:!0,suppressMenuHide:!0,autoGroupColumnDef:{sortable:!0},columnTypes:{abColDefNumber:{},abColDefString:{},abColDefBoolean:{},abColDefDate:{},abColDefObject:{},abColDefNumberArray:{}}}),{},{modules:b.a})},e.next=4,c.a.init(o);case 4:return(a=e.sent).auditEventApi.on("AuditCellEdited",(function(e){var t=e.data[0].id.data_change_details;alert('you changed "'+(null===t||void 0===t?void 0:t.previous_value)+'" to: "'+(null===t||void 0===t?void 0:t.new_value)+'"')})),e.abrupt("return",{adaptableOptions:o,adaptableApi:a});case 7:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}(),A=Object(l.a)(i.a.mark((function e(){var t,n,a,o,r;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(t=new d.a).setUpAgGridLicence(),n=JSON.parse(JSON.stringify(s)),t.convertExcelData(n),a=t.getBasicNorthwindColumnSchema(),e.next=7,g(a,n);case 7:return o=e.sent,r=o.adaptableOptions,o.adaptableApi,r.vendorGrid.onGridReady=function(e){e.columnApi.autoSizeAllColumns(),setTimeout((function(){return e.columnApi.autoSizeAllColumns()}),1),e.api.addEventListener("newColumnsLoaded",(function(){e.columnApi.autoSizeAllColumns()})),e.api.closeToolPanel()},e.abrupt("return",{unload:function(){r.auditOptions=void 0},code:"import '@adaptabletools/adaptable/index.css';\nimport '@adaptabletools/adaptable/themes/dark.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham-dark.css';\nimport Adaptable from '@adaptabletools/adaptable/agGrid';\nimport { GridOptions } from '@ag-grid-community/all-modules';\nimport {\n  AdaptableOptions,\n  AdaptableApi,\n  AuditLogEventArgs,\n  DataChangedDetails,\n} from '@adaptabletools/adaptable/types';\nimport { AllEnterpriseModules } from '@ag-grid-enterprise/all-modules';\n\nvar adaptableApi: AdaptableApi;\n\nexport default async (columnDefs: any[], rowData: any[]) => {\n  const gridOptions: GridOptions = {\n    columnDefs,\n    rowData,\n    enableRangeSelection: true,\n    sideBar: true,\n    suppressMenuHide: true,\n    autoGroupColumnDef: {\n      sortable: true,\n    },\n    columnTypes: {\n      abColDefNumber: {},\n      abColDefString: {},\n      abColDefBoolean: {},\n      abColDefDate: {},\n      abColDefObject: {},\n      abColDefNumberArray: {},\n    },\n  };\n\n  const adaptableOptions: AdaptableOptions = {\n    primaryKey: 'OrderId',\n    userName: 'Demo User',\n    adaptableId: 'Audit Log Demo',\n    auditOptions: {\n      auditUserStateChanges: {\n        auditToConsole: true,\n      },\n      auditFunctionsApplied: {\n        auditToConsole: true,\n        //  auditAsAlert: true,\n        auditToHttpChannel: true,\n      },\n      auditCellEdits: {\n        auditToConsole: true,\n        auditAsEvent: true,\n      },\n    },\n    vendorGrid: { ...gridOptions, modules: AllEnterpriseModules },\n  };\n  adaptableApi = await Adaptable.init(adaptableOptions);\n\n  adaptableApi.auditEventApi.on(\n    'AuditCellEdited',\n    (auditLogEventArgs: AuditLogEventArgs) => {\n      const dataChangeDetails: DataChangedDetails | undefined =\n        auditLogEventArgs.data[0].id.data_change_details;\n      alert(\n        'you changed \"' +\n          dataChangeDetails?.previous_value +\n          '\" to: \"' +\n          dataChangeDetails?.new_value +\n          '\"'\n      );\n    }\n  );\n\n  return { adaptableOptions, adaptableApi };\n};\n"});case 12:case"end":return e.stop()}}),e)})));t.default=function(e){return Object(o.useEffect)((function(){A().then((function(t){e.onReady&&e.onReady(t)}))}),[]),null}}}]);