(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[204],{"6OHV":function(e,n,t){"use strict";t.d(n,"a",(function(){return d}));var a=t("1OyB"),o=t("vuIU"),r=t("rePB"),i=t("ThKj");function u(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?u(Object(t),!0).forEach((function(n){Object(r.a)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):u(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var d=function(){function e(){Object(a.a)(this,e),Object(r.a)(this,"isTicking",!1)}return Object(o.a)(e,[{key:"testTickingDataagGrid",value:function(e,n,t,a){var o=this;if(null!=e&&null!=e.api){var r=new i.a;this.isTicking=!0,setInterval((function(){if(o.isTicking){var n=o.generateRandomInt(1,a),t=e.api.getRowNode(n),i=s({},e.rowData[n]),u=o.generateRandomInt(1,2),d=1==u?-.5:.5,l=1==u?-.01:.01,m=o.roundTo4Dp(i.price+d),p=i.bidOfferSpread,c=o.roundTo4Dp(m+p/2),g=o.roundTo4Dp(m-p/2),C=o.roundTo4Dp(c+l),f=o.roundTo4Dp(g-l),y=o.getRandomItem(r.getNotionals()),v=r.getMeaningfulDouble();false,t.setDataValue("price",m),t.setDataValue("bid",g),t.setDataValue("ask",c),t.setDataValue("bloombergAsk",C),t.setDataValue("bloombergBid",f),t.setDataValue("notional",y),t.setDataValue("changeOnYear",v),t.setDataValue("price",m),t.setDataValue("price",m)}}),t)}}},{key:"startTickingDataagGridOrders",value:function(e,n,t,a,o){var r=this,i=arguments.length>5&&void 0!==arguments[5]&&arguments[5];null!=e&&null!=e.api&&(this.isTicking=!0,setInterval((function(){if(r.isTicking){var t=r.generateRandomInt(a,o),u=e.api.getRowNode(t);if(u){var d=s({},u.data);if(d){if(i){var l=r.generateRandomInt(1,10),m=e.api.getValue("ItemCount",u);d.ItemCount=l<8?m+1:3*m}else{var p=1==r.generateRandomInt(1,2)?-.5:.5,c=e.api.getValue("ItemCost",u),g=r.roundTo4Dp(c+p);d.ItemCost=g;var C=e.api.getValue("ItemCount",u)*g;d.OrderCost=C;var f=C-e.api.getValue("PackageCost",u);d.InvoicedCost=f;var y=1==r.generateRandomInt(1,2)?-1:1,v=e.api.getValue("ChangeLastOrder",u);d.ChangeLastOrder=y+v,d.ItemCount=r.generateRandomInt(1,2e3)}n.gridApi.updateGridData([d])}}}}),t))}},{key:"startTickingDataagGridPivot",value:function(e,n,t){var a=this;null!=e&&null!=e.api&&(this.isTicking=!0,setInterval((function(){if(a.isTicking){var t=[10982,10949,10810,10620,10339][a.generateRandomInt(0,4)],o=e.api.getRowNode(t);if(o){var r=s({},o.data);if(r){var i=e.api.getValue("InvoicedCost",o);r.InvoicedCost=i+5,n.gridApi.updateGridData([r])}}}}),t))}},{key:"startTickingDataagGridTradesUpdateData",value:function(e,n,t,a){var o=this,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(null!=e&&null!=e.api){var u=new i.a;this.isTicking=!0,setInterval((function(){if(o.isTicking){var t,i=o.generateRandomInt(1,a),d=null===(t=e.api)||void 0===t?void 0:t.getRowNode(String(i));if(!d)return;var l=s({},d.data);if(r){var m=o.generateRandomInt(1,2),p=1==m?-.5:.5,c=1==m?-.01:.01,g=o.roundTo4Dp(l.price+p),C=l.bidOfferSpread,f=o.roundTo4Dp(g+C/2),y=o.roundTo4Dp(g-C/2);l.price=g,l.bid=y,l.ask=f,l.bloombergAsk=o.roundTo4Dp(f+c),l.bloombergBid=o.roundTo4Dp(y-c),l.notional=o.getRandomItem(u.getNotionals()),l.changeOnYear=u.getMeaningfulDouble()}else{var v=o.generateRandomInt(1,3);1==v?l.price=l.price+1:2==v?l.price=l.price-1:3==v&&(l.currency="JPY")}n.gridApi.updateGridData([l])}}),t)}}},{key:"startTickingDataagGridTrade",value:function(e,n,t,a){var o=this;if(null!=n&&null!=n.api){this.isTicking=!0;var r=new i.a;setInterval((function(){if(o.isTicking){var t=o.generateRandomInt(1,a),i=n.api.getRowNode(t);if(i){var u=i.data;if(u){var s=o.generateRandomInt(1,2),d=1==s?-.5:.5,l=1==s?-.01:.01,m=o.roundTo4Dp(u.price+d),p=u.bidOfferSpread,c=o.roundTo4Dp(m+p/2),g=o.roundTo4Dp(m-p/2);u.price=m,u.bid=g,u.ask=c,u.bloombergAsk=o.roundTo4Dp(c+l),u.bloombergBid=o.roundTo4Dp(g-l),u.changeOnYear=r.getMeaningfulDouble();e.gridApi.updateGridData([u],{runAsync:!0})}}}}),t)}}},{key:"startTickingDataagGridTradeBatch",value:function(e,n,t,a,o,r){var i=this;if(null!=n&&null!=n.api){var u=t.getCounterparties(),d=u.length-1,l=t.getCurrencies(),m=l.length-1,p=t.getCountries(),c=p.length-1,g=t.getNotionals(),C={runAsync:!0,callbackFn:function(){console.log("batch update occurred")}};setInterval((function(){for(var a=[],f=0;f<r;f++){var y,v=i.generateRandomInt(1,o),b=null===(y=n.api)||void 0===y?void 0:y.getRowNode(String(v));if(!b)return;var D=s({},b.data),I=i.generateRandomInt(1,2),h=u[i.generateRandomInt(0,d)],O=l[i.generateRandomInt(0,m)],S=p[i.generateRandomInt(0,c)],T=1==I?-.5:.5,R=i.roundTo4Dp(D.price+T),k=D.bidOfferSpread,w=i.roundTo4Dp(R+k/2),N=i.roundTo4Dp(R-k/2),A=i.getRandomItem(g),P=t.getMeaningfulDouble();D.price=R,D.bid=N,D.ask=w,D.bidOfferSpread=k,D.notional=A,D.changeOnYear=P,D.counterparty=String(h),D.currency=O,D.country=S,a.push(D)}e.gridApi.updateGridData(a,C)}),a)}}},{key:"startTickingDataagGridTradeBatchAddDeleteUpdate",value:function(e,n,t,a,o,r,i){var u=this;if(null!=n&&null!=n.api){var d=t.getCounterparties(),l=d.length-1,m=e.internalApi.getAdaptableInstance(),p={runAsync:!0};setInterval((function(){if(m.isInitialised){for(var t=[],a=n.api.getDisplayedRowCount(),o=0;o<r;o++){var i=u.generateRandomInt(0,a-1),c=n.api.getDisplayedRowAtIndex(i);if(!c)return;var g=s({},c.data),C=u.generateRandomInt(-1,1),f=d[u.generateRandomInt(0,l)],y=u.roundTo4Dp(g.price+C),v=g.bidOfferSpread,b=u.roundTo4Dp(y+v/2),D=u.roundTo4Dp(y-v/2);g.price=y,g.bid=D,g.ask=b,g.counterparty=String(f),t.push(g)}e.gridApi.updateGridData(t,p)}}),a);var c=!0,g=o;setInterval((function(){if(m.isInitialised){var a=u.generateRandomInt(-10,10),o=[],r=i+a;if(c){for(var s=0;s<r;s++){g++;var d=t.createTrade(g);d&&o.push(d)}e.gridApi.addGridData(o,p),c=!1}else{for(var l=n.api.getDisplayedRowCount(),C=0;C<r;C++){var f=u.generateRandomInt(0,l-1),y=n.api.getDisplayedRowAtIndex(f);if(y){var v=y.data;v&&o.push(v)}}e.gridApi.deleteGridData(o,p),c=!0}}}),3e3)}}},{key:"startTickingDataagGridAddRow",value:function(e,n,t,a){var o=this;if(null!=e&&null!=e.api&&void 0!=e.api&&null!=n){this.isTicking=!0;var r=e.api.getDisplayedRowCount()+1,u=new i.a;setInterval((function(){if(o.isTicking&&++r<a){var n=u.createTrade(r);n&&(console.log("adding row with Id: "+r),e.api.updateRowData({add:[n]}))}}),t)}}},{key:"startTickingDataagGridDeleteRow",value:function(e,n,t,a){var o=this;null!=e&&null!=e.api&&void 0!=e.api&&null!=n&&(this.isTicking=!0,setInterval((function(){if(o.isTicking){var n=e.api.getDisplayedRowCount();if(n>a){var t=o.generateRandomInt(0,n-1),r=e.api.getDisplayedRowAtIndex(t);if(r){var i=r.data;i&&(console.log("deleting row with Id:: "+i.tradeId),e.api.updateRowData({remove:[i]}))}}}}),t))}},{key:"useTickingDataTreeGrid",value:function(e,n){var t=this;if(null!=e&&null!=e.api){var a=[1,2,3,4,5,7,8,9,10,11,13,14,15,16,17,18,20,21,22,23,25,25,27,28,29,30,31,33,34,35,36,37];this.isTicking=!0,setInterval((function(){if(t.isTicking){var n=t.generateRandomInt(0,29),o=a[n],r=s({},e.rowData[o]);if(!r)return;var i=t.generateRandomInt(-5,5),u=r.staff+i,d=85*i,l=r.budget+d;r.staff=u,r.budget=l,e.api.updateRowData({update:[r]})}}),n)}}},{key:"turnOffTicking",value:function(){this.isTicking=!1}},{key:"getRandomItem",value:function(e,n){return n?e[this.generateRandomInt(0,Math.min(n,e.length-1))]:e[this.generateRandomInt(0,e.length-1)]}},{key:"generateRandomInt",value:function(e,n){return Math.floor(Math.random()*(n-e+1)+e)}},{key:"roundTo4Dp",value:function(e){return Math.round(1e4*e)/1e4}}]),e}()},rmeF:function(e,n,t){"use strict";t.r(n);var a,o=t("q1tI"),r=t("o0o1"),i=t.n(r),u=t("HaE+"),s=(t("nX5y"),t("smsc")),d=t("ThKj"),l=t("rePB"),m=(t("PMha"),t("cUqQ"),t("5TJ6"),t("jWP/"),t("iMsr"),t("mbJ9")),p=t.n(m),c=t("mXS1");function g(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function C(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?g(Object(t),!0).forEach((function(n){Object(l.a)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):g(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var f={Dashboard:{Tabs:[{Name:"Demo Toolbar",Toolbars:["Layout","Export","CellSummary"]}]},CustomSort:{CustomSorts:[{ColumnId:"ShipVia",SortedValues:["Speedy Express","United Package","Federal Shipping"]}]},CalculatedColumn:{CalculatedColumns:[{ColumnExpression:"[ItemCost] / [ItemCount]",ColumnId:"AvgCost",FriendlyName:"Avg Item Cost"}]},FreeTextColumn:{FreeTextColumns:[{ColumnId:"Comments",FriendlyName:"Comments",DefaultValue:"",FreeTextStoredValues:[{PrimaryKey:10250,FreeText:"Dispatch asap"},{PrimaryKey:10254,FreeText:"Angry customer"},{PrimaryKey:10259,FreeText:"This is an Important order - ensure its done properly"}]}]},Layout:{CurrentLayout:"Simple Layout",Layouts:[{Name:"Simple Layout",Columns:["OrderId","OrderDate","ItemCost","ItemCount","Comments","CustomerReference","CompanyName","ContactName","InvoicedCost","ChangeLastOrder","OrderCost","PackageCost"]},{Name:"Col Widths Layout",Columns:["OrderId","OrderDate","ItemCost","ItemCount","Comments","CustomerReference","CompanyName","ContactName","InvoicedCost","ChangeLastOrder","OrderCost","PackageCost"],ColumnWidthMap:{OrderId:200,Comments:300}},{Name:"Sorting Layout",ColumnSorts:[{ColumnId:"ShipName",SortOrder:"Asc"},{ColumnId:"ShipVia",SortOrder:"Desc"}],Columns:["OrderId","ShipVia","Freight","ShipName","ShipCountry","ShippedDate","CustomerReference"]},{Columns:["ShipVia","CustomerReference","ContactName","InvoicedCost","ChangeLastOrder","OrderCost","PackageCost","Employee","ShipCountry"],RowGroupedColumns:["Employee","ShipCountry"],Name:"Grouping Layout"},{Columns:["CustomerReference","ContactName","Employee","ShipCountry"],RowGroupedColumns:["Employee"],PivotColumns:["ShipVia"],AggregationColumns:{InvoicedCost:"sum",ItemCost:"avg"},EnablePivot:!0,Name:"Pivot Layout"},{Columns:["ShipVia","Comments","CustomerReference","AvgCost","ContactName","InvoicedCost","OrderCost","Employee","ShipCountry"],ColumnSorts:[{ColumnId:"ShipName",SortOrder:"Asc"},{Column:"ShipVia",SortOrder:"Descending"}],RowGroupedColumns:["Employee"],Name:"Advanced Layout"}]},FormatColumn:{FormatColumns:[{Scope:{ColumnIds:["InvoicedCost"]},DisplayFormat:{Formatter:"NumberFormatter",Options:{FractionDigits:4}}},{Scope:{ColumnIds:["ItemCost"]},DisplayFormat:{Formatter:"NumberFormatter",Options:{FractionDigits:4}}}]}},y=function(){var e=Object(u.a)(i.a.mark((function e(n,t){var o;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o={primaryKey:"OrderId",userName:"Demo User",adaptableId:"Advanced Layout Demo",predefinedConfig:f,layoutOptions:{autoSizeColumnsInLayout:!0,autoSizeColumnsInPivotLayout:!0},vendorGrid:C(C({},{columnDefs:n,rowData:t,enableRangeSelection:!0,suppressMenuHide:!0,rowGroupPanelShow:"always",autoGroupColumnDef:{sortable:!0},columnTypes:{abColDefNumber:{},abColDefString:{},abColDefBoolean:{},abColDefDate:{},abColDefObject:{},abColDefNumberArray:{}}}),{},{modules:c.a})},e.next=4,p.a.init(o);case 4:return a=e.sent,e.abrupt("return",{adaptableOptions:o,adaptableApi:a});case 6:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),v=t("6OHV"),b=Object(u.a)(i.a.mark((function e(){var n,t,a,o,r,u;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(n=new d.a).setUpAgGridLicence(),t=new v.a,a=JSON.parse(JSON.stringify(s)),n.convertExcelData(a),o=n.getBasicNorthwindColumnSchema(),e.next=8,y(o,a);case 8:return r=e.sent,u=r.adaptableOptions,r.adaptableApi.eventApi.on("AdaptableReady",(function(){})),u.vendorGrid.onGridReady=function(e){e.columnApi.autoSizeAllColumns(),e.api.addEventListener("newColumnsLoaded",(function(){})),e.api.closeToolPanel()},e.abrupt("return",{unload:function(){t.turnOffTicking()},code:"import '@adaptabletools/adaptable/index.css';\nimport '@adaptabletools/adaptable/themes/dark.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham-dark.css';\nimport Adaptable from '@adaptabletools/adaptable/agGrid';\nimport { GridOptions } from '@ag-grid-community/all-modules';\nimport {\n  AdaptableOptions,\n  PredefinedConfig,\n  AdaptableApi,\n} from '@adaptabletools/adaptable/types';\nimport { AllEnterpriseModules } from '@ag-grid-enterprise/all-modules';\nimport { DataGenerator } from '../../../Helpers/DataGenerator';\n\nvar adaptableApi: AdaptableApi;\n\nconst demoConfig: PredefinedConfig = {\n  Dashboard: {\n    Tabs: [\n      {\n        Name: 'Demo Toolbar',\n        Toolbars: ['Layout', 'Export', 'CellSummary'],\n      },\n    ],\n  },\n  CustomSort: {\n    CustomSorts: [\n      {\n        ColumnId: 'ShipVia',\n        SortedValues: ['Speedy Express', 'United Package', 'Federal Shipping'],\n      },\n    ],\n  },\n  CalculatedColumn: {\n    CalculatedColumns: [\n      {\n        ColumnExpression: '[ItemCost] / [ItemCount]',\n        ColumnId: 'AvgCost',\n        FriendlyName: 'Avg Item Cost',\n      },\n    ],\n  },\n  FreeTextColumn: {\n    FreeTextColumns: [\n      {\n        ColumnId: 'Comments',\n        FriendlyName: 'Comments',\n        DefaultValue: '',\n        FreeTextStoredValues: [\n          { PrimaryKey: 10250, FreeText: 'Dispatch asap' },\n          { PrimaryKey: 10254, FreeText: 'Angry customer' },\n          {\n            PrimaryKey: 10259,\n            FreeText: 'This is an Important order - ensure its done properly',\n          },\n        ],\n      },\n    ],\n  },\n  Layout: {\n    CurrentLayout: 'Simple Layout',\n    Layouts: [\n      {\n        Name: 'Simple Layout',\n        Columns: [\n          'OrderId',\n          'OrderDate',\n          'ItemCost',\n          'ItemCount',\n          'Comments',\n          'CustomerReference',\n          'CompanyName',\n          'ContactName',\n          'InvoicedCost',\n          'ChangeLastOrder',\n          'OrderCost',\n          'PackageCost',\n        ],\n      },\n      {\n        Name: 'Col Widths Layout',\n        Columns: [\n          'OrderId',\n          'OrderDate',\n          'ItemCost',\n          'ItemCount',\n          'Comments',\n          'CustomerReference',\n          'CompanyName',\n          'ContactName',\n          'InvoicedCost',\n          'ChangeLastOrder',\n          'OrderCost',\n          'PackageCost',\n        ],\n        ColumnWidthMap: {\n          OrderId: 200,\n          Comments: 300,\n        },\n      },\n      {\n        Name: 'Sorting Layout',\n        ColumnSorts: [\n          {\n            ColumnId: 'ShipName',\n            SortOrder: 'Asc',\n          },\n          { ColumnId: 'ShipVia', SortOrder: 'Desc' },\n        ],\n        Columns: [\n          'OrderId',\n          'ShipVia',\n          'Freight',\n          'ShipName',\n          'ShipCountry',\n          'ShippedDate',\n          'CustomerReference',\n        ],\n      },\n      {\n        Columns: [\n          'ShipVia',\n          'CustomerReference',\n          'ContactName',\n          'InvoicedCost',\n          'ChangeLastOrder',\n          'OrderCost',\n          'PackageCost',\n          'Employee',\n          'ShipCountry',\n        ],\n        RowGroupedColumns: ['Employee', 'ShipCountry'],\n        Name: 'Grouping Layout',\n      },\n      {\n        Columns: [\n          'CustomerReference',\n          'ContactName',\n          'Employee',\n          'ShipCountry',\n        ],\n        RowGroupedColumns: ['Employee'],\n        PivotColumns: ['ShipVia'],\n        AggregationColumns: { InvoicedCost: 'sum', ItemCost: 'avg' },\n        EnablePivot: true,\n        Name: 'Pivot Layout',\n      },\n      {\n        Columns: [\n          'ShipVia',\n          'Comments',\n          'CustomerReference',\n          'AvgCost',\n          'ContactName',\n          'InvoicedCost',\n          'OrderCost',\n          'Employee',\n          'ShipCountry',\n        ],\n        ColumnSorts: [\n          {\n            ColumnId: 'ShipName',\n            SortOrder: 'Asc',\n          },\n          { Column: 'ShipVia', SortOrder: 'Descending' },\n        ],\n        RowGroupedColumns: ['Employee'],\n        Name: 'Advanced Layout',\n      },\n    ],\n  },\n  FormatColumn: {\n    FormatColumns: [\n      {\n        Scope: {\n          ColumnIds: ['InvoicedCost'],\n        },\n        DisplayFormat: {\n          Formatter: 'NumberFormatter',\n          Options: {\n            FractionDigits: 4,\n          },\n        },\n      },\n      {\n        Scope: {\n          ColumnIds: ['ItemCost'],\n        },\n        DisplayFormat: {\n          Formatter: 'NumberFormatter',\n          Options: {\n            FractionDigits: 4,\n          },\n        },\n      },\n    ],\n  },\n} as PredefinedConfig;\n\nexport default async (columnDefs: any[], rowData: any[]) => {\n  const gridOptions: GridOptions = {\n    columnDefs,\n    rowData,\n    enableRangeSelection: true,\n    suppressMenuHide: true,\n    rowGroupPanelShow: 'always',\n    autoGroupColumnDef: {\n      sortable: true,\n    },\n    columnTypes: {\n      abColDefNumber: {},\n      abColDefString: {},\n      abColDefBoolean: {},\n      abColDefDate: {},\n      abColDefObject: {},\n      abColDefNumberArray: {},\n    },\n  };\n\n  const adaptableOptions: AdaptableOptions = {\n    primaryKey: 'OrderId',\n    userName: 'Demo User',\n    adaptableId: 'Advanced Layout Demo',\n    predefinedConfig: demoConfig,\n    layoutOptions: {\n      autoSizeColumnsInLayout: true,\n      autoSizeColumnsInPivotLayout: true,\n    },\n    vendorGrid: { ...gridOptions, modules: AllEnterpriseModules },\n  };\n  adaptableApi = await Adaptable.init(adaptableOptions);\n\n  return { adaptableOptions, adaptableApi };\n};\n"});case 14:case"end":return e.stop()}}),e)})));n.default=function(e){return Object(o.useEffect)((function(){b().then((function(n){e.onReady&&e.onReady(n)}))}),[]),null}}}]);