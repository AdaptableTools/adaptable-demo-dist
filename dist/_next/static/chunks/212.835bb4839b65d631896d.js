(window.webpackJsonp=window.webpackJsonp||[]).push([[212],{pQ2t:function(n,a,t){"use strict";t.r(a);var e=t("q1tI"),o=t("9Jkg"),i=t.n(o),l=(t("nX5y"),t("smsc")),r=t("ThKj"),d=t("hfKm"),u=t.n(d),s=t("2Eek"),p=t.n(s),m=t("XoMD"),c=t.n(m),b=t("Jo+v"),f=t.n(b),g=t("4mXO"),h=t.n(g),C=t("pLtp"),y=t.n(C),A=t("vYYK"),D=(t("PMha"),t("cUqQ"),t("5TJ6"),t("jWP/"),t("iMsr"),t("mbJ9")),O=t.n(D),v=t("mXS1");function T(n,a){var t=y()(n);if(h.a){var e=h()(n);a&&(e=e.filter((function(a){return f()(n,a).enumerable}))),t.push.apply(t,e)}return t}function w(n){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?T(Object(t),!0).forEach((function(a){Object(A.a)(n,a,t[a])})):c.a?p()(n,c()(t)):T(Object(t)).forEach((function(a){u()(n,a,f()(t,a))}))}return n}var E=t("6OHV"),S=function(){var n=new r.a;n.setUpAgGridLicence();var a=JSON.parse(i()(l));n.convertExcelDates(a);var t=new E.a,e=function(n,a){var t={primaryKey:"OrderId",userName:"Demo User",adaptableId:"Audit Channel Demo",auditOptions:{httpChannel:"https://adaptable-auditlog.netlify.com/.netlify/functions/auditlog",auditUserStateChanges:{auditToHttpChannel:!0},auditFunctionEvents:{auditToHttpChannel:!0},auditCellEdits:{auditToHttpChannel:!0}},vendorGrid:w({},{columnDefs:n,rowData:a,enableRangeSelection:!0,sideBar:!0,suppressMenuHide:!0,floatingFilter:!0,columnTypes:{abColDefNumber:{},abColDefString:{},abColDefBoolean:{},abColDefDate:{},abColDefObject:{},abColDefNumberArray:{}}},{modules:v.a})};return{adaptableOptions:t,adaptableApi:O.a.init(t)}}(n.getBasicNorthwindColumnSchema(),a),o=e.adaptableOptions,d=e.adaptableApi;return o.vendorGrid.onGridReady=function(n){n.columnApi.autoSizeAllColumns(),setTimeout((function(){return n.columnApi.autoSizeAllColumns()}),1),n.api.addEventListener("newColumnsLoaded",(function(){n.columnApi.autoSizeAllColumns()})),n.api.closeToolPanel()},d.eventApi.on("AdaptableReady",(function(){t.startTickingDataagGridOrders(o.vendorGrid,d,1e3,10248,11142,!0)})),{unload:function(){t.turnOffTicking(),o.auditOptions=void 0},code:"import '@adaptabletools/adaptable/index.css';\nimport '@adaptabletools/adaptable/themes/dark.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham-dark.css';\nimport Adaptable from '@adaptabletools/adaptable/agGrid';\nimport { GridOptions } from '@ag-grid-community/all-modules';\nimport {\n  AdaptableOptions,\n  AdaptableApi,\n} from '@adaptabletools/adaptable/types';\nimport { AllEnterpriseModules } from '@ag-grid-enterprise/all-modules';\n\nvar adaptableApi: AdaptableApi;\n\nexport default (columnDefs: any[], rowData: any[]) => {\n  const gridOptions: GridOptions = {\n    columnDefs,\n    rowData,\n    enableRangeSelection: true,\n    sideBar: true,\n    suppressMenuHide: true,\n    floatingFilter: true,\n    columnTypes: {\n      abColDefNumber: {},\n      abColDefString: {},\n      abColDefBoolean: {},\n      abColDefDate: {},\n      abColDefObject: {},\n      abColDefNumberArray: {},\n    },\n  };\n\n  const adaptableOptions: AdaptableOptions = {\n    primaryKey: 'OrderId',\n    userName: 'Demo User',\n    adaptableId: 'Audit Channel Demo',\n    auditOptions: {\n      httpChannel:\n        'https://adaptable-auditlog.netlify.com/.netlify/functions/auditlog',\n      auditUserStateChanges: {\n        auditToHttpChannel: true,\n      },\n      auditFunctionEvents: {\n        auditToHttpChannel: true,\n      },\n      auditCellEdits: {\n        auditToHttpChannel: true,\n      },\n    },\n    vendorGrid: { ...gridOptions, modules: AllEnterpriseModules },\n  };\n  adaptableApi = Adaptable.init(adaptableOptions);\n\n  return { adaptableOptions, adaptableApi };\n};\n"}};a.default=function(n){return Object(e.useEffect)((function(){var a=S();n.onReady&&n.onReady(a)}),[]),null}}}]);