(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[277],{hgWd:function(e,n,t){"use strict";t.r(n);var o,a=t("q1tI"),r=t("o0o1"),l=t.n(r),s=t("HaE+"),i=(t("nX5y"),t("smsc")),p=t("ThKj"),d=t("rePB"),c=(t("PMha"),t("cUqQ"),t("5TJ6"),t("jWP/"),t("iMsr"),t("erxx"),t("mbJ9")),u=t.n(c),m=t("mXS1");function b(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function f(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?b(Object(t),!0).forEach((function(n){Object(d.a)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):b(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var y={UserInterface:{RowStyles:[{Style:{ClassName:"evenRowStyle"},RowType:"Even"},{Style:{ForeColor:"lightyellow",BackColor:"brown",FontStyle:"Italic",FontWeight:"Bold"},RowType:"Odd"}]}},w=function(){var e=Object(s.a)(l.a.mark((function e(n,t){var a;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a={primaryKey:"OrderId",userName:"Demo User",adaptableId:"Row Style Demo",predefinedConfig:y,vendorGrid:f(f({},{columnDefs:n,rowData:t,enableRangeSelection:!0,sideBar:!0,suppressMenuHide:!0,autoGroupColumnDef:{sortable:!0},columnTypes:{abColDefNumber:{},abColDefString:{},abColDefBoolean:{},abColDefDate:{},abColDefObject:{},abColDefNumberArray:{}}}),{},{modules:m.a})},e.next=4,u.a.init(a);case 4:return o=e.sent,e.abrupt("return",{adaptableOptions:a,adaptableApi:o});case 6:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),g=Object(s.a)(l.a.mark((function e(){var n,t,o,a,r;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(n=new p.a).setUpAgGridLicence(),t=JSON.parse(JSON.stringify(i)),n.convertExcelData(t),o=n.getPercentBarNorthwindColumnSchema(),e.next=7,w(o,t);case 7:return a=e.sent,r=a.adaptableOptions,a.adaptableApi,r.vendorGrid.onGridReady=function(e){e.columnApi.autoSizeAllColumns(),setTimeout((function(){return e.columnApi.autoSizeAllColumns()}),1),e.api.addEventListener("newColumnsLoaded",(function(){e.columnApi.autoSizeAllColumns()})),e.api.closeToolPanel()},e.abrupt("return",{code:"import '@adaptabletools/adaptable/index.css';\nimport '@adaptabletools/adaptable/themes/dark.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham-dark.css';\nimport './rowstyle.css';\nimport Adaptable from '@adaptabletools/adaptable/agGrid';\nimport { GridOptions } from '@ag-grid-community/all-modules';\nimport {\n  AdaptableOptions,\n  PredefinedConfig,\n  AdaptableApi,\n} from '@adaptabletools/adaptable/types';\nimport { AllEnterpriseModules } from '@ag-grid-enterprise/all-modules';\n\nvar adaptableApi: AdaptableApi;\n\nconst demoConfig: PredefinedConfig = {\n  UserInterface: {\n    RowStyles: [\n      /*\n      // Use this if you want to style ALL rows\n      // As with all our Styles you can either use some properties or a cssClassName\n      {\n        Style: {\n          ForeColor: 'yellow',\n          BackColor: 'purple',\n          FontWeight: 'Bold',\n          // ClassName: 'allRowStyle', // giving a classname\n        },\n        RowType: 'All',\n      },\n      */\n      {\n        // For even row style we are going to reference just a class name (this css class is in the imported 'rowstyle.css')\n        // the css looks like this:\n        /*\n        .evenRowStyle {\n          background: lightyellow !important;\n          color: brown;\n          font-weight: normal !important;\n          font-style: bold !important;\n        }         \n        */\n        Style: {\n          ClassName: 'evenRowStyle',\n        },\n        RowType: 'Even',\n      },\n      {\n        // For odd rows we will create the style ourselvves\n        Style: {\n          ForeColor: 'lightyellow',\n          BackColor: 'brown',\n          FontStyle: 'Italic',\n          FontWeight: 'Bold',\n        },\n        RowType: 'Odd',\n      },\n    ],\n  },\n} as PredefinedConfig;\n\nexport default async (columnDefs: any[], rowData: any[]) => {\n  const gridOptions: GridOptions = {\n    columnDefs,\n    rowData,\n    enableRangeSelection: true,\n    sideBar: true,\n    suppressMenuHide: true,\n    autoGroupColumnDef: {\n      sortable: true,\n    },\n    columnTypes: {\n      abColDefNumber: {},\n      abColDefString: {},\n      abColDefBoolean: {},\n      abColDefDate: {},\n      abColDefObject: {},\n      abColDefNumberArray: {},\n    },\n  };\n\n  const adaptableOptions: AdaptableOptions = {\n    primaryKey: 'OrderId',\n    userName: 'Demo User',\n    adaptableId: 'Row Style Demo',\n    predefinedConfig: demoConfig,\n    vendorGrid: { ...gridOptions, modules: AllEnterpriseModules },\n  };\n  adaptableApi = await Adaptable.init(adaptableOptions);\n\n  return { adaptableOptions, adaptableApi };\n};\n"});case 12:case"end":return e.stop()}}),e)})));n.default=function(e){return Object(a.useEffect)((function(){g().then((function(n){e.onReady&&e.onReady(n)}))}),[]),null}}}]);