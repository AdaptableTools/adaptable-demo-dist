(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[270],{me9m:function(e,n,t){"use strict";t.r(n);var a,o=t("q1tI"),r=t("o0o1"),i=t.n(r),d=t("HaE+"),l=(t("nX5y"),t("smsc")),s=t("ThKj"),p=t("KQm4"),u=t("rePB"),m=(t("PMha"),t("cUqQ"),t("5TJ6"),t("jWP/"),t("iMsr"),t("mbJ9")),c=t.n(m),f=t("mXS1");function y(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function b(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?y(Object(t),!0).forEach((function(n){Object(u.a)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):y(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var g={FormatColumn:{FormatColumns:[{Scope:{ColumnIds:["OrderDate"]},Style:{FontWeight:"Bold",FontSize:"XSmall",FontStyle:"Italic"},CellAlignment:"Center",DisplayFormat:{Formatter:"DateFormatter",Options:{Pattern:"yyyyMMdd"}}},{Scope:{ColumnIds:["InvoicedCost"]},CellAlignment:"Right",DisplayFormat:{Formatter:"NumberFormatter",Options:{FractionDigits:2,Prefix:"\xa3"}}}]},Layout:{CurrentLayout:"Delayed",Layouts:[{Columns:["CustomerReference","OrderId","InvoicedCost","ContactName","Employee","OrderDate","ShipVia"],Name:"Delayed"}]}},C=function(){var e=Object(d.a)(i.a.mark((function e(n,t){var o;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o={primaryKey:"OrderId",userName:"Demo User",adaptableId:"Delayed Data Demo",predefinedConfig:g,layoutOptions:{includeExpandedRowGroups:!0,autoSizeColumnsInLayout:!0},vendorGrid:b(b({},{columnDefs:n,enableRangeSelection:!0,suppressMenuHide:!0,autoGroupColumnDef:{sortable:!0,minWidth:200}}),{},{modules:f.a})},e.next=4,c.a.init(o);case 4:return(a=e.sent).eventApi.on("AdaptableReady",(function(e){setTimeout((function(){a.gridApi.loadGridData(t)}),3e3),setTimeout((function(){var n,t=e.vendorGrid,a=t.columnDefs;null===(n=t.api)||void 0===n||n.setColumnDefs([a.filter((function(e){return"CompanyName"===e.field}))[0]].concat([a.filter((function(e){return"PackageCost"===e.field}))[0]],Object(p.a)(a)))}),6e3)})),e.abrupt("return",{adaptableOptions:o,adaptableApi:a});case 7:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),D=Object(d.a)(i.a.mark((function e(){var n,t,a,o,r;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(n=new s.a).setUpAgGridLicence(),t=JSON.parse(JSON.stringify(l)),n.convertExcelData(t),a=n.getBasicNorthwindColumnSchema(),e.next=7,C(a,t);case 7:return o=e.sent,r=o.adaptableOptions,o.adaptableApi,r.vendorGrid.onGridReady=function(e){e.columnApi.autoSizeAllColumns(),setTimeout((function(){return e.columnApi.autoSizeAllColumns()}),1),e.api.addEventListener("newColumnsLoaded",(function(){})),e.api.closeToolPanel()},e.abrupt("return",{code:"import '@adaptabletools/adaptable/index.css';\nimport '@adaptabletools/adaptable/themes/dark.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham-dark.css';\nimport Adaptable from '@adaptabletools/adaptable/agGrid';\nimport { ColDef, GridOptions } from '@ag-grid-community/all-modules';\nimport {\n  AdaptableOptions,\n  AdaptableApi,\n  PredefinedConfig,\n  AdaptableReadyInfo,\n} from '@adaptabletools/adaptable/types';\nimport { AllEnterpriseModules } from '@ag-grid-enterprise/all-modules';\n\nvar adaptableApi: AdaptableApi;\n\nconst demoConfig: PredefinedConfig = {\n  FormatColumn: {\n    FormatColumns: [\n      {\n        Scope: {\n          ColumnIds: ['OrderDate'],\n        },\n        Style: {\n          FontWeight: 'Bold',\n          FontSize: 'XSmall',\n          FontStyle: 'Italic',\n        },\n        CellAlignment: 'Center',\n        DisplayFormat: {\n          Formatter: 'DateFormatter',\n          Options: {\n            Pattern: 'yyyyMMdd',\n          },\n        },\n      },\n      {\n        Scope: {\n          ColumnIds: ['InvoicedCost'],\n        },\n        CellAlignment: 'Right',\n        DisplayFormat: {\n          Formatter: 'NumberFormatter',\n          Options: {\n            FractionDigits: 2,\n            Prefix: '\xa3',\n          },\n        },\n      },\n    ],\n  },\n  Layout: {\n    CurrentLayout: 'Delayed',\n    Layouts: [\n      {\n        Columns: [\n          'CustomerReference',\n          'OrderId',\n          'InvoicedCost',\n          'ContactName',\n          'Employee',\n          'OrderDate',\n          'ShipVia',\n        ],\n        Name: 'Delayed',\n      },\n    ],\n  },\n} as PredefinedConfig;\n\nexport default async (columnDefs: any[], rowData: any[]) => {\n  const gridOptions: GridOptions = {\n    columnDefs,\n    // rowData, - note we are NOT setting rowData at startup\n    enableRangeSelection: true,\n    suppressMenuHide: true,\n    autoGroupColumnDef: {\n      sortable: true,\n      minWidth: 200,\n    },\n  };\n\n  const adaptableOptions: AdaptableOptions = {\n    primaryKey: 'OrderId',\n    userName: 'Demo User',\n    adaptableId: 'Delayed Data Demo',\n    predefinedConfig: demoConfig,\n    layoutOptions: {\n      includeExpandedRowGroups: true,\n      autoSizeColumnsInLayout: true,\n    },\n    vendorGrid: { ...gridOptions, modules: AllEnterpriseModules },\n  };\n  adaptableApi = await Adaptable.init(adaptableOptions);\n\n  adaptableApi.eventApi.on('AdaptableReady', (info: AdaptableReadyInfo) => {\n    // Add data to grid after 3 seconds using loadGridData method in GridApi\n    setTimeout(() => {\n      adaptableApi.gridApi.loadGridData(rowData);\n    }, 3000);\n\n    // Add the Package Cost and Compamy Name columns to the grid after 6 seconds\n    setTimeout(() => {\n      const vendorGrid: GridOptions = info.vendorGrid;\n      const colDefs = vendorGrid.columnDefs as ColDef[];\n      vendorGrid.api?.setColumnDefs([\n        ...[colDefs.filter(c => c.field === 'CompanyName')[0]],\n        ...[colDefs.filter(c => c.field === 'PackageCost')[0]],\n        ...colDefs,\n      ]);\n    }, 6000);\n  });\n\n  return { adaptableOptions, adaptableApi };\n};\n"});case 12:case"end":return e.stop()}}),e)})));n.default=function(e){return Object(o.useEffect)((function(){D().then((function(n){e.onReady&&e.onReady(n)}))}),[]),null}}}]);