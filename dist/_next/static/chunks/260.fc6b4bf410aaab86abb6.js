(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[260],{Zm0E:function(e,n,t){"use strict";t.r(n);var a,r=t("q1tI"),o=t("o0o1"),i=t.n(o),s=t("HaE+"),d=(t("nX5y"),t("smsc")),l=t("ThKj"),u=t("rePB"),p=(t("PMha"),t("cUqQ"),t("5TJ6"),t("jWP/"),t("iMsr"),t("mbJ9")),c=t.n(p),m=t("mXS1");function C(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function b(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?C(Object(t),!0).forEach((function(n){Object(u.a)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):C(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var f={Filter:{ColumnFilters:[{ColumnId:"ChangeLastOrder",Predicate:{PredicateId:"Positive"}},{ColumnId:"Employee",Predicate:{PredicateId:"Values",Inputs:["Janet Leverling","Margaret Peacock","Nancy Davolio"]}},{ColumnId:"InvoicedCost",Predicate:{PredicateId:"Between",Inputs:[10,300]}},{ColumnId:"OrderDate",Predicate:{PredicateId:"InPast"}},{ColumnId:"ItemCost",Predicate:{PredicateId:"GreaterThan",Inputs:[20]}}]},Dashboard:{Tabs:[{Name:"Toolbars",Toolbars:["Filter"]}]},Layout:{CurrentLayout:"Orders",Layouts:[{Columns:["OrderId","ItemCost","OrderDate","ShippedDate","Employee","Freight","ChangeLastOrder","ShipCountry","ShipVia","InvoicedCost","CustomerReference"],ColumnSorts:[{ColumnId:"ShippedDate",SortOrder:"Desc"}],Name:"Orders"}]}},O=function(){var e=Object(s.a)(i.a.mark((function e(n,t){var r;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r={primaryKey:"OrderId",userName:"Demo User",adaptableId:"Column Filters Demo",filterOptions:{sortColumnValuesInFilter:!0},predefinedConfig:f,vendorGrid:b(b({},{columnDefs:n,rowData:t,enableRangeSelection:!0,sideBar:!0,suppressMenuHide:!0,statusBar:{statusPanels:[{statusPanel:"agTotalRowCountComponent",align:"left"},{statusPanel:"agFilteredRowCountComponent"}]}}),{},{modules:m.a})},e.next=4,c.a.init(r);case 4:return(a=e.sent).eventApi.on("AdaptableReady",(function(){a.filterApi.setColumnFilter([{ColumnId:"ShipCountry",Predicate:{PredicateId:"Values",Inputs:["France","USA","UK"]}}])})),e.abrupt("return",{adaptableOptions:r,adaptableApi:a});case 7:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),I=Object(s.a)(i.a.mark((function e(){var n,t,a,r,o;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(n=new l.a).setUpAgGridLicence(),t=JSON.parse(JSON.stringify(d)),n.convertExcelData(t),a=n.getBasicNorthwindColumnSchema(),e.next=7,O(a,t);case 7:return r=e.sent,o=r.adaptableOptions,r.adaptableApi,o.vendorGrid.onGridReady=function(e){e.columnApi.autoSizeAllColumns(),setTimeout((function(){return e.columnApi.autoSizeAllColumns()}),1),e.api.addEventListener("newColumnsLoaded",(function(){e.columnApi.autoSizeAllColumns()})),e.api.closeToolPanel()},e.abrupt("return",{code:"import '@adaptabletools/adaptable/index.css';\nimport '@adaptabletools/adaptable/themes/dark.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham-dark.css';\nimport Adaptable from '@adaptabletools/adaptable/agGrid';\nimport { GridOptions } from '@ag-grid-community/all-modules';\nimport {\n  AdaptableOptions,\n  PredefinedConfig,\n  AdaptableApi,\n  ColumnFilter,\n} from '@adaptabletools/adaptable/types';\nimport { AllEnterpriseModules } from '@ag-grid-enterprise/all-modules';\n\nvar adaptableApi: AdaptableApi;\n\nconst demoConfig: PredefinedConfig = {\n  Filter: {\n    ColumnFilters: [\n      {\n        ColumnId: 'ChangeLastOrder',\n        Predicate: { PredicateId: 'Positive' },\n      },\n      {\n        ColumnId: 'Employee',\n        Predicate: {\n          PredicateId: 'Values',\n          Inputs: ['Janet Leverling', 'Margaret Peacock', 'Nancy Davolio'],\n        },\n      },\n      {\n        ColumnId: 'InvoicedCost',\n        Predicate: {\n          PredicateId: 'Between',\n          Inputs: [10, 300],\n        },\n      },\n      {\n        ColumnId: 'OrderDate',\n        Predicate: {\n          PredicateId: 'InPast',\n        },\n      },\n      {\n        ColumnId: 'ItemCost',\n        Predicate: {\n          PredicateId: 'GreaterThan',\n          Inputs: [20],\n        },\n      },\n    ],\n  },\n  Dashboard: {\n    Tabs: [\n      {\n        Name: 'Toolbars',\n        Toolbars: ['Filter'],\n      },\n    ],\n  },\n  Layout: {\n    CurrentLayout: 'Orders',\n    Layouts: [\n      {\n        Columns: [\n          'OrderId',\n          'ItemCost',\n          'OrderDate',\n          'ShippedDate',\n          'Employee',\n          'Freight',\n          'ChangeLastOrder',\n          'ShipCountry',\n          'ShipVia',\n          'InvoicedCost',\n          'CustomerReference',\n        ],\n        ColumnSorts: [\n          {\n            ColumnId: 'ShippedDate',\n            SortOrder: 'Desc',\n          },\n        ],\n        Name: 'Orders',\n      },\n    ],\n  },\n} as PredefinedConfig;\n\nexport default async (columnDefs: any[], rowData: any[]) => {\n  const gridOptions: GridOptions = {\n    columnDefs,\n    rowData,\n    enableRangeSelection: true,\n    sideBar: true,\n    suppressMenuHide: true,\n    statusBar: {\n      statusPanels: [\n        { statusPanel: 'agTotalRowCountComponent', align: 'left' },\n        { statusPanel: 'agFilteredRowCountComponent' },\n      ],\n    },\n  };\n\n  const adaptableOptions: AdaptableOptions = {\n    primaryKey: 'OrderId',\n    userName: 'Demo User',\n    adaptableId: 'Column Filters Demo',\n    filterOptions: {\n      sortColumnValuesInFilter: true,\n    },\n    predefinedConfig: demoConfig,\n    vendorGrid: { ...gridOptions, modules: AllEnterpriseModules },\n  };\n  adaptableApi = await Adaptable.init(adaptableOptions);\n\n  adaptableApi.eventApi.on('AdaptableReady', () => {\n    let columnFilter: ColumnFilter = {\n      ColumnId: 'ShipCountry',\n      Predicate: {\n        PredicateId: 'Values',\n        Inputs: ['France', 'USA', 'UK'],\n      },\n    };\n\n    adaptableApi.filterApi.setColumnFilter([columnFilter]);\n  });\n\n  return { adaptableOptions, adaptableApi };\n};\n"});case 12:case"end":return e.stop()}}),e)})));n.default=function(e){return Object(r.useEffect)((function(){I().then((function(n){e.onReady&&e.onReady(n)}))}),[]),null}}}]);