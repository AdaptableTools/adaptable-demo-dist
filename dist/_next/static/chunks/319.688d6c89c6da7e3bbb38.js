(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[319],{CfeP:function(e,a,n){"use strict";n.r(a);var r,t=n("q1tI"),o=n("o0o1"),s=n.n(o),i=n("HaE+"),d=(n("nX5y"),n("ThKj")),l=n("rePB"),p=(n("PMha"),n("cUqQ"),n("5TJ6"),n("jWP/"),n("iMsr"),n("mbJ9")),c=n.n(p),u=n("mXS1");function g(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function m(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?g(Object(n),!0).forEach((function(a){Object(l.a)(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):g(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}var b={DataSource:{DataSources:[{Name:"Euro Trades",Description:"Euro Trades"},{Name:"Dollar Trades",Description:"Dollar Trades"},{Name:"GBP Trades",Description:"Sterling Trades"},{Name:"2019 Actiivty",Description:"Trades Done This Year"}]},Dashboard:{Tabs:[{Name:"Search",Toolbars:["DataSource"]}]}},f=function(){var e=Object(i.a)(s.a.mark((function e(a){var n,t;return s.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n={primaryKey:"tradeId",userName:"Demo User",adaptableId:"Data Source Demo",predefinedConfig:b,vendorGrid:m(m({},{columnDefs:a,rowData:void 0,enableRangeSelection:!0,sideBar:!0,suppressMenuHide:!0,statusBar:{statusPanels:[{statusPanel:"agTotalRowCountComponent",align:"left"},{statusPanel:"agFilteredRowCountComponent"}]}}),{},{modules:u.a})},e.next=4,c.a.init(n);case 4:return r=e.sent,t=new d.a,r.eventApi.on("SearchChanged",(function(e){if("DataSource"==e.searchChangedTrigger){var a=e.adaptableSearchState;if(null!=a.dataSource)switch(a.dataSource.Name){case"Euro Trades":var n=t.getEuroTrades(500);r.gridApi.setGridData(n);break;case"Dollar Trades":var o=t.getDollarTrades(200);r.gridApi.setGridData(o);break;case"GBP Trades":var s=t.getGBPTrades(12);r.gridApi.setGridData(s);break;case"2019 Actiivty":var i=t.getThisYearTrades(300);r.gridApi.setGridData(i)}}})),e.abrupt("return",{adaptableOptions:n,adaptableApi:r});case 8:case"end":return e.stop()}}),e)})));return function(a){return e.apply(this,arguments)}}(),h=Object(i.a)(s.a.mark((function e(){var a,n,r,t;return s.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(a=new d.a).setUpAgGridLicence(),n=a.getTradeSchema(),e.next=5,f(n);case 5:return r=e.sent,t=r.adaptableOptions,r.adaptableApi,t.vendorGrid.onGridReady=function(e){e.columnApi.autoSizeAllColumns(),setTimeout((function(){return e.columnApi.autoSizeAllColumns()}),1),e.api.addEventListener("newColumnsLoaded",(function(){e.columnApi.autoSizeAllColumns()})),e.api.closeToolPanel()},e.abrupt("return",{code:"import '@adaptabletools/adaptable/index.css';\nimport '@adaptabletools/adaptable/themes/dark.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham-dark.css';\nimport Adaptable from '@adaptabletools/adaptable/agGrid';\nimport { GridOptions } from '@ag-grid-community/all-modules';\nimport {\n  AdaptableOptions,\n  PredefinedConfig,\n  AdaptableApi,\n  SearchChangedInfo,\n  AdaptableSearchState,\n} from '@adaptabletools/adaptable/types';\nimport { AllEnterpriseModules } from '@ag-grid-enterprise/all-modules';\nimport { HelperAgGrid } from '../../../Helpers/HelperAgGrid';\n\nvar adaptableApi: AdaptableApi;\n\nconst demoConfig: PredefinedConfig = {\n  DataSource: {\n    DataSources: [\n      {\n        Name: 'Euro Trades',\n        Description: 'Euro Trades',\n      },\n      {\n        Name: 'Dollar Trades',\n        Description: 'Dollar Trades',\n      },\n      {\n        Name: 'GBP Trades',\n        Description: 'Sterling Trades',\n      },\n      {\n        Name: '2019 Actiivty',\n        Description: 'Trades Done This Year',\n      },\n    ],\n  },\n  Dashboard: {\n    Tabs: [\n      {\n        Name: 'Search',\n        Toolbars: ['DataSource'],\n      },\n    ],\n  },\n} as PredefinedConfig;\n\nexport default async (columnDefs: any[]) => {\n  const gridOptions: GridOptions = {\n    columnDefs,\n    rowData: undefined,\n    enableRangeSelection: true,\n    sideBar: true,\n    suppressMenuHide: true,\n    statusBar: {\n      statusPanels: [\n        { statusPanel: 'agTotalRowCountComponent', align: 'left' },\n        { statusPanel: 'agFilteredRowCountComponent' },\n      ],\n    },\n  };\n\n  const adaptableOptions: AdaptableOptions = {\n    primaryKey: 'tradeId',\n    userName: 'Demo User',\n    adaptableId: 'Data Source Demo',\n    predefinedConfig: demoConfig,\n    vendorGrid: { ...gridOptions, modules: AllEnterpriseModules },\n  };\n  adaptableApi = await Adaptable.init(adaptableOptions);\n\n  const helperAgGrid = new HelperAgGrid();\n  adaptableApi.eventApi.on(\n    'SearchChanged',\n    (searchChangedInfo: SearchChangedInfo) => {\n      if (searchChangedInfo.searchChangedTrigger == 'DataSource') {\n        let searchState: AdaptableSearchState =\n          searchChangedInfo.adaptableSearchState;\n        if (searchState.dataSource != null) {\n          switch (searchState.dataSource.Name) {\n            case 'Euro Trades':\n              let euroTrades = helperAgGrid.getEuroTrades(500);\n              adaptableApi.gridApi.setGridData(euroTrades);\n              break;\n\n            case 'Dollar Trades':\n              let dollarTrades = helperAgGrid.getDollarTrades(200);\n              adaptableApi.gridApi.setGridData(dollarTrades);\n              break;\n\n            case 'GBP Trades':\n              let sterlingTrades = helperAgGrid.getGBPTrades(12);\n              adaptableApi.gridApi.setGridData(sterlingTrades);\n              break;\n\n            case '2019 Actiivty':\n              let thisYearTrades = helperAgGrid.getThisYearTrades(300);\n              adaptableApi.gridApi.setGridData(thisYearTrades);\n              break;\n          }\n        }\n      }\n    }\n  );\n\n  return { adaptableOptions, adaptableApi };\n};\n"});case 10:case"end":return e.stop()}}),e)})));a.default=function(e){return Object(t.useEffect)((function(){h().then((function(a){e.onReady&&e.onReady(a)}))}),[]),null}}}]);