(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[266],{rkiK:function(e,n,t){"use strict";t.r(n);var o,a=t("q1tI"),r=t("o0o1"),i=t.n(r),s=t("HaE+"),u=(t("nX5y"),t("smsc")),l=t("ThKj"),p=t("rePB"),m=(t("PMha"),t("cUqQ"),t("5TJ6"),t("jWP/"),t("iMsr"),t("mbJ9")),d=t.n(m),c=t("mXS1");function C(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function y(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?C(Object(t),!0).forEach((function(n){Object(p.a)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):C(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var f={Dashboard:{VisibleButtons:["CustomSort"]},CustomSort:{CustomSorts:[{ColumnId:"ContactName",SortedValues:["Palle Ibsen","Jaime Yorres","Aria Cruz","Roland Mendel","Fran Wilson","Georg Pipps","Bernardo Batista"]},{ColumnId:"ShipVia",SortedValues:["Speedy Express","United Package","Federal Shipping"]},{ColumnId:"Employee",CustomSortComparerFunction:"EmployeeLastName"}]},Layout:{CurrentLayout:"Sorting Layout",Layouts:[{Name:"Sorting Layout",ColumnSorts:[{ColumnId:"Employee",SortOrder:"Asc"},{ColumnId:"ContactName",SortOrder:"Desc"}],Columns:["ContactName","OrderId","ShipVia","Freight","Employee","ShipName","ShipCountry","ShippedDate","CustomerReference"]},{Columns:["CustomerReference","ContactName","InvoicedCost","ChangeLastOrder","OrderCost","PackageCost","ShipCountry"],RowGroupedColumns:["Employee"],Name:"Grouping Layout"},{Columns:["CustomerReference","ContactName","ShipName","ShipCountry"],RowGroupedColumns:["ShipCountry"],PivotDetails:{PivotColumns:["ShipVia"],AggregationColumns:["InvoicedCost","ItemCost"]},Name:"Pivot Layout"}]}},g=function(){var e=Object(s.a)(i.a.mark((function e(n,t){var a;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a={primaryKey:"OrderId",userName:"Demo User",adaptableId:"Custom Sort Demo",userFunctions:[{name:"EmployeeLastName",type:"CustomSortComparerFunction",handler:function(e,n,t,o){if(!e||!n)return 0;var a=e.split(" "),r=n.split(" ");return a[a.length-1]>r[r.length-1]?1:-1}}],predefinedConfig:f,vendorGrid:y(y({},{columnDefs:n,rowData:t,enableRangeSelection:!0,sideBar:!0,suppressMenuHide:!0,autoGroupColumnDef:{sortable:!0}}),{},{modules:c.a})},e.next=4,d.a.init(a);case 4:return o=e.sent,e.abrupt("return",{adaptableOptions:a,adaptableApi:o});case 6:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),b=Object(s.a)(i.a.mark((function e(){var n,t,o,a,r;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(n=new l.a).setUpAgGridLicence(),t=JSON.parse(JSON.stringify(u)),n.convertExcelData(t),o=n.getConditionalstyleNorthwindColumnSchema(),e.next=7,g(o,t);case 7:return a=e.sent,r=a.adaptableOptions,a.adaptableApi,r.vendorGrid.onGridReady=function(e){e.columnApi.autoSizeAllColumns(),setTimeout((function(){return e.columnApi.autoSizeAllColumns()}),1),e.api.addEventListener("newColumnsLoaded",(function(){e.columnApi.autoSizeAllColumns()})),e.api.closeToolPanel()},e.abrupt("return",{code:"import '@adaptabletools/adaptable/index.css';\nimport '@adaptabletools/adaptable/themes/dark.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham-dark.css';\nimport Adaptable from '@adaptabletools/adaptable/agGrid';\nimport { GridOptions } from '@ag-grid-community/all-modules';\nimport {\n  AdaptableOptions,\n  PredefinedConfig,\n  AdaptableApi,\n} from '@adaptabletools/adaptable/types';\nimport { AllEnterpriseModules } from '@ag-grid-enterprise/all-modules';\n\nvar adaptableApi: AdaptableApi;\n\nconst demoConfig: PredefinedConfig = {\n  Dashboard: {\n    VisibleButtons: ['CustomSort'],\n  },\n  CustomSort: {\n    CustomSorts: [\n      {\n        ColumnId: 'ContactName',\n        SortedValues: [\n          'Palle Ibsen',\n          'Jaime Yorres',\n          'Aria Cruz',\n          'Roland Mendel',\n          'Fran Wilson',\n          'Georg Pipps',\n          'Bernardo Batista',\n        ],\n      },\n      {\n        ColumnId: 'ShipVia',\n        SortedValues: ['Speedy Express', 'United Package', 'Federal Shipping'],\n      },\n      {\n        ColumnId: 'Employee',\n        CustomSortComparerFunction: 'EmployeeLastName',\n      },\n    ],\n  },\n  Layout: {\n    CurrentLayout: 'Sorting Layout',\n    Layouts: [\n      {\n        Name: 'Sorting Layout',\n        ColumnSorts: [\n          {\n            ColumnId: 'Employee',\n            SortOrder: 'Asc',\n          },\n          { ColumnId: 'ContactName', SortOrder: 'Desc' },\n        ],\n        Columns: [\n          'ContactName',\n          'OrderId',\n          'ShipVia',\n          'Freight',\n          'Employee',\n          'ShipName',\n          'ShipCountry',\n          'ShippedDate',\n          'CustomerReference',\n        ],\n      },\n      {\n        Columns: [\n          'CustomerReference',\n          'ContactName',\n          'InvoicedCost',\n          'ChangeLastOrder',\n          'OrderCost',\n          'PackageCost',\n          'ShipCountry',\n        ],\n        RowGroupedColumns: ['Employee'],\n        Name: 'Grouping Layout',\n      },\n      {\n        Columns: [\n          'CustomerReference',\n          'ContactName',\n          'ShipName',\n          'ShipCountry',\n        ],\n        RowGroupedColumns: ['ShipCountry'],\n        PivotDetails: {\n          PivotColumns: ['ShipVia'],\n          AggregationColumns: ['InvoicedCost', 'ItemCost'],\n        },\n        Name: 'Pivot Layout',\n      },\n    ],\n  },\n} as PredefinedConfig;\n\nexport default async (columnDefs: any[], rowData: any[]) => {\n  const gridOptions: GridOptions = {\n    columnDefs,\n    rowData,\n    enableRangeSelection: true,\n    sideBar: true,\n    suppressMenuHide: true,\n    autoGroupColumnDef: {\n      sortable: true,\n    },\n  };\n\n  const adaptableOptions: AdaptableOptions = {\n    primaryKey: 'OrderId',\n    userName: 'Demo User',\n    adaptableId: 'Custom Sort Demo',\n    userFunctions: [\n      {\n        name: 'EmployeeLastName',\n        type: 'CustomSortComparerFunction',\n        handler(valueA: any, valueB: any, nodeA?: any, nodeB?: any) {\n          if (!valueA || !valueB) {\n            return 0;\n          }\n\n          const fullName = valueA.split(' ');\n          const fullNameB = valueB.split(' ');\n          return fullName[fullName.length - 1] > fullNameB[fullNameB.length - 1]\n            ? 1\n            : -1;\n        },\n      },\n    ],\n    predefinedConfig: demoConfig,\n    vendorGrid: { ...gridOptions, modules: AllEnterpriseModules },\n  };\n  adaptableApi = await Adaptable.init(adaptableOptions);\n\n  return { adaptableOptions, adaptableApi };\n};\n"});case 12:case"end":return e.stop()}}),e)})));n.default=function(e){return Object(a.useEffect)((function(){b().then((function(n){e.onReady&&e.onReady(n)}))}),[]),null}}}]);