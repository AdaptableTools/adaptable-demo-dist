(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[253],{"6/NA":function(e,n,t){"use strict";t.r(n);var o,a=t("q1tI"),r=t("o0o1"),i=t.n(r),p=t("HaE+"),s=(t("nX5y"),t("smsc")),l=t("ThKj"),u=t("rePB"),m=(t("PMha"),t("cUqQ"),t("5TJ6"),t("jWP/"),t("iMsr"),t("mbJ9")),d=t.n(m),c=t("mXS1");function b(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function f(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?b(Object(t),!0).forEach((function(n){Object(u.a)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):b(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var y={Dashboard:{Tabs:[{Name:"Toolbars",Toolbars:["Export"]}]},Export:{CurrentReport:"People Report",Reports:[{ReportColumnScope:"CustomColumns",ReportRowScope:"CustomRows",Name:"People Report",CustomReportFunction:"getDummyData"}]},Schedule:{ReportSchedules:[{ScheduleType:"Report",ReportName:"People Report",ExportDestination:"CSV",Schedule:{DaysOfWeek:[1,2,3,4,5],Hour:17,Minute:30}}]}},g=function(){var e=Object(p.a)(i.a.mark((function e(n,t){var a;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a={primaryKey:"OrderId",userName:"Demo User",adaptableId:"Custom Reports Demo",userFunctions:[{type:"CustomReportFunction",name:"getDummyData",handler:function(e){return{columns:[{ColumnId:"Name",FriendlyName:"Name",DataType:"String"},{ColumnId:"Age",FriendlyName:"Age",DataType:"Number"},{ColumnId:"Location",FriendlyName:"Location",DataType:"String"}],rows:[{Name:"Joe",Age:52,Location:"London"},{Name:"Dawn",Age:39,Location:"New York"},{Name:"Peter",Location:"France"},{Name:"Eleanor",Age:525}]}}}],predefinedConfig:y,vendorGrid:f(f({},{columnDefs:n,rowData:t,enableRangeSelection:!0,sideBar:!0,suppressMenuHide:!0,columnTypes:{abColDefNumber:{},abColDefString:{},abColDefBoolean:{},abColDefDate:{},abColDefObject:{},abColDefNumberArray:{}}}),{},{modules:c.a})},e.next=4,d.a.init(a);case 4:return o=e.sent,e.abrupt("return",{adaptableOptions:a,adaptableApi:o});case 6:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),D=Object(p.a)(i.a.mark((function e(){var n,t,o,a,r;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(n=new l.a).setUpAgGridLicence(),t=JSON.parse(JSON.stringify(s)),n.convertExcelData(t),o=n.getBasicNorthwindColumnSchema(),e.next=7,g(o,t);case 7:return a=e.sent,r=a.adaptableOptions,a.adaptableApi,r.vendorGrid.onGridReady=function(e){e.columnApi.autoSizeAllColumns(),setTimeout((function(){return e.columnApi.autoSizeAllColumns()}),1),e.api.addEventListener("newColumnsLoaded",(function(){e.columnApi.autoSizeAllColumns()})),e.api.closeToolPanel()},e.abrupt("return",{code:"import '@adaptabletools/adaptable/index.css';\nimport '@adaptabletools/adaptable/themes/dark.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham-dark.css';\nimport Adaptable from '@adaptabletools/adaptable/agGrid';\nimport { GridOptions } from '@ag-grid-community/all-modules';\nimport {\n  AdaptableOptions,\n  PredefinedConfig,\n  AdaptableApi,\n  ReportData,\n} from '@adaptabletools/adaptable/types';\nimport { AllEnterpriseModules } from '@ag-grid-enterprise/all-modules';\n\nvar adaptableApi: AdaptableApi;\n\nconst demoConfig: PredefinedConfig = {\n  Dashboard: {\n    Tabs: [\n      {\n        Name: 'Toolbars',\n        Toolbars: ['Export'],\n      },\n    ],\n  },\n  Export: {\n    CurrentReport: 'People Report',\n    Reports: [\n      {\n        ReportColumnScope: 'CustomColumns',\n        ReportRowScope: 'CustomRows',\n        Name: 'People Report',\n        CustomReportFunction: 'getDummyData',\n      },\n    ],\n  },\n  Schedule: {\n    ReportSchedules: [\n      {\n        ScheduleType: 'Report',\n        ReportName: 'People Report',\n        ExportDestination: 'CSV',\n        Schedule: {\n          DaysOfWeek: [1, 2, 3, 4, 5],\n          Hour: 17,\n          Minute: 30,\n        },\n      },\n    ],\n  },\n} as PredefinedConfig;\n\nexport default async (columnDefs: any[], rowData: any[]) => {\n  const gridOptions: GridOptions = {\n    columnDefs,\n    rowData,\n    enableRangeSelection: true,\n    sideBar: true,\n    suppressMenuHide: true,\n    columnTypes: {\n      abColDefNumber: {},\n      abColDefString: {},\n      abColDefBoolean: {},\n      abColDefDate: {},\n      abColDefObject: {},\n      abColDefNumberArray: {},\n    },\n  };\n\n  const adaptableOptions: AdaptableOptions = {\n    primaryKey: 'OrderId',\n    userName: 'Demo User',\n    adaptableId: 'Custom Reports Demo',\n    userFunctions: [\n      {\n        type: 'CustomReportFunction',\n        name: 'getDummyData',\n        handler(reportName: string) {\n          // this will typically run a call on the server but here we just provide some dummy data\n          // note that it takes the form of a ReportData object - with a 'columns' and a 'rows' section\n          let reportData: ReportData = {\n            columns: [\n              {\n                ColumnId: 'Name',\n                FriendlyName: 'Name',\n                DataType: 'String',\n              },\n              {\n                ColumnId: 'Age',\n                FriendlyName: 'Age',\n                DataType: 'Number',\n              },\n              {\n                ColumnId: 'Location',\n                FriendlyName: 'Location',\n                DataType: 'String',\n              },\n            ],\n            rows: [\n              { Name: 'Joe', Age: 52, Location: 'London' },\n              { Name: 'Dawn', Age: 39, Location: 'New York' },\n              { Name: 'Peter', Location: 'France' },\n              { Name: 'Eleanor', Age: 525 },\n            ],\n          };\n          return reportData;\n        },\n      },\n    ],\n    predefinedConfig: demoConfig,\n    vendorGrid: { ...gridOptions, modules: AllEnterpriseModules },\n  };\n  adaptableApi = await Adaptable.init(adaptableOptions);\n\n  return { adaptableOptions, adaptableApi };\n};\n"});case 12:case"end":return e.stop()}}),e)})));n.default=function(e){return Object(a.useEffect)((function(){D().then((function(n){e.onReady&&e.onReady(n)}))}),[]),null}}}]);