(window.webpackJsonp=window.webpackJsonp||[]).push([[197,12],{"2Eek":function(n,e,o){n.exports=o("W7oM")},"7m0m":function(n,e,o){var t=o("Y7ZC"),a=o("uplh"),r=o("NsO/"),i=o("vwuL"),l=o("IP1Z");t(t.S,"Object",{getOwnPropertyDescriptors:function(n){for(var e,o,t=r(n),u=i.f,s=a(t),d={},p=0;s.length>p;)void 0!==(o=u(t,e=s[p++]))&&l(d,e,o);return d}})},W7oM:function(n,e,o){o("nZgG");var t=o("WEpk").Object;n.exports=function(n,e){return t.defineProperties(n,e)}},XoMD:function(n,e,o){n.exports=o("hYAz")},hYAz:function(n,e,o){o("7m0m"),n.exports=o("WEpk").Object.getOwnPropertyDescriptors},mbJ9:function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var t=o("o9a/");e.default=t.default,e.AdaptableNoCodeWizard=t.AdaptableNoCodeWizard},nZgG:function(n,e,o){var t=o("Y7ZC");t(t.S+t.F*!o("jmDH"),"Object",{defineProperties:o("fpC5")})},rkiK:function(n,e,o){"use strict";o.r(e);var t=o("q1tI"),a=o("9Jkg"),r=o.n(a),i=(o("nX5y"),o("smsc")),l=o("ThKj"),u=o("hfKm"),s=o.n(u),d=o("2Eek"),p=o.n(d),m=o("XoMD"),c=o.n(m),f=o("Jo+v"),C=o.n(f),b=o("4mXO"),g=o.n(b),y=o("pLtp"),S=o.n(y),h=o("vYYK"),v=(o("PMha"),o("cUqQ"),o("5TJ6"),o("jWP/"),o("iMsr"),o("mbJ9")),A=o.n(v),D=o("mXS1");function O(n,e){var o=S()(n);if(g.a){var t=g()(n);e&&(t=t.filter((function(e){return C()(n,e).enumerable}))),o.push.apply(o,t)}return o}function N(n){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?O(Object(o),!0).forEach((function(e){Object(h.a)(n,e,o[e])})):c.a?p()(n,c()(o)):O(Object(o)).forEach((function(e){s()(n,e,C()(o,e))}))}return n}var P={Dashboard:{VisibleButtons:["CustomSort"]},CustomSort:{CustomSorts:[{ColumnId:"ContactName",SortedValues:["Palle Ibsen","Jaime Yorres","Aria Cruz","Roland Mendel","Fran Wilson","Georg Pipps","Bernardo Batista"]},{ColumnId:"ShipVia",SortedValues:["Speedy Express","United Package","Federal Shipping"]},{ColumnId:"Employee",CustomSortComparerFunction:function(n,e,o,t){if(!n||!e)return 0;var a=n.split(" "),r=e.split(" ");return a[a.length-1]>r[r.length-1]?1:-1}}]},Layout:{CurrentLayout:"Sorting Layout",Layouts:[{Name:"Sorting Layout",ColumnSorts:[{Column:"Employee",SortOrder:"Ascending"},{Column:"ContactName",SortOrder:"Descending"}],Columns:["ContactName","OrderId","ShipVia","Freight","Employee","ShipName","ShipCountry","ShippedDate","CustomerReference"]},{Columns:["CustomerReference","ContactName","ShipName","ShipCountry"],GroupedColumns:["ShipCountry"],PivotDetails:{PivotColumns:["ShipVia"],AggregationColumns:["InvoicedCost","ItemCost"]},Name:"Pivot Layout"}]}},I=function(){var n=new l.a;n.setUpAgGridLicence();var e=JSON.parse(r()(i));n.convertExcelDates(e);var o=function(n,e){var o={primaryKey:"OrderId",userName:"Demo User",adaptableId:"Custom Sort Demo",predefinedConfig:P,vendorGrid:N({},{columnDefs:n,rowData:e,enableRangeSelection:!0,sideBar:!0,suppressMenuHide:!0,floatingFilter:!0,columnTypes:{abColDefNumber:{},abColDefString:{},abColDefBoolean:{},abColDefDate:{},abColDefObject:{},abColDefNumberArray:{}}},{modules:D.a})};return{adaptableOptions:o,adaptableApi:A.a.init(o)}}(n.getConditionalstyleNorthwindColumnSchema(),e),t=o.adaptableOptions;o.adaptableApi;return t.vendorGrid.onGridReady=function(n){n.columnApi.autoSizeAllColumns(),setTimeout((function(){return n.columnApi.autoSizeAllColumns()}),1),n.api.addEventListener("newColumnsLoaded",(function(){n.columnApi.autoSizeAllColumns()})),n.api.closeToolPanel()},{code:"import '@adaptabletools/adaptable/index.css';\nimport '@adaptabletools/adaptable/themes/dark.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham-dark.css';\nimport Adaptable from '@adaptabletools/adaptable/agGrid';\nimport { GridOptions } from '@ag-grid-community/all-modules';\nimport {\n  AdaptableOptions,\n  PredefinedConfig,\n  AdaptableApi,\n} from '@adaptabletools/adaptable/types';\nimport { AllEnterpriseModules } from '@ag-grid-enterprise/all-modules';\n\nvar adaptableApi: AdaptableApi;\n\nconst demoConfig: PredefinedConfig = {\n  Dashboard: {\n    VisibleButtons: ['CustomSort'],\n  },\n  CustomSort: {\n    CustomSorts: [\n      {\n        ColumnId: 'ContactName',\n        SortedValues: [\n          'Palle Ibsen',\n          'Jaime Yorres',\n          'Aria Cruz',\n          'Roland Mendel',\n          'Fran Wilson',\n          'Georg Pipps',\n          'Bernardo Batista',\n        ],\n      },\n      {\n        ColumnId: 'ShipVia',\n        SortedValues: ['Speedy Express', 'United Package', 'Federal Shipping'],\n      },\n      {\n        ColumnId: 'Employee',\n        CustomSortComparerFunction: (\n          valueA: any,\n          valueB: any,\n          nodeA: any,\n          nodeB: any\n        ) => {\n          if (!valueA || !valueB) {\n            return 0;\n          }\n\n          const fullName = valueA.split(' ');\n          const fullNameB = valueB.split(' ');\n          return fullName[fullName.length - 1] > fullNameB[fullNameB.length - 1]\n            ? 1\n            : -1;\n        },\n      },\n    ],\n  },\n  Layout: {\n    CurrentLayout: 'Sorting Layout',\n    Layouts: [\n      {\n        Name: 'Sorting Layout',\n        ColumnSorts: [\n          {\n            Column: 'Employee',\n            SortOrder: 'Ascending',\n          },\n          { Column: 'ContactName', SortOrder: 'Descending' },\n        ],\n        Columns: [\n          'ContactName',\n          'OrderId',\n          'ShipVia',\n          'Freight',\n          'Employee',\n          'ShipName',\n          'ShipCountry',\n          'ShippedDate',\n          'CustomerReference',\n        ],\n      },\n\n      {\n        Columns: [\n          'CustomerReference',\n          'ContactName',\n          'ShipName',\n          'ShipCountry',\n        ],\n        GroupedColumns: ['ShipCountry'],\n        PivotDetails: {\n          PivotColumns: ['ShipVia'],\n          AggregationColumns: ['InvoicedCost', 'ItemCost'],\n        },\n        Name: 'Pivot Layout',\n      },\n    ],\n  },\n} as PredefinedConfig;\n\nexport default (columnDefs: any[], rowData: any[]) => {\n  const gridOptions: GridOptions = {\n    columnDefs,\n    rowData,\n    enableRangeSelection: true,\n    sideBar: true,\n    suppressMenuHide: true,\n    floatingFilter: true,\n    columnTypes: {\n      abColDefNumber: {},\n      abColDefString: {},\n      abColDefBoolean: {},\n      abColDefDate: {},\n      abColDefObject: {},\n      abColDefNumberArray: {},\n    },\n  };\n\n  const adaptableOptions: AdaptableOptions = {\n    primaryKey: 'OrderId',\n    userName: 'Demo User',\n    adaptableId: 'Custom Sort Demo',\n    predefinedConfig: demoConfig,\n    vendorGrid: { ...gridOptions, modules: AllEnterpriseModules },\n  };\n  adaptableApi = Adaptable.init(adaptableOptions);\n\n  return { adaptableOptions, adaptableApi };\n};\n"}};e.default=function(n){return Object(t.useEffect)((function(){var e=I();n.onReady&&n.onReady(e)}),[]),null}},uplh:function(n,e,o){var t=o("ar/p"),a=o("mqlF"),r=o("5K7Z"),i=o("5T2Y").Reflect;n.exports=i&&i.ownKeys||function(n){var e=t.f(r(n)),o=a.f;return o?e.concat(o(n)):e}}}]);