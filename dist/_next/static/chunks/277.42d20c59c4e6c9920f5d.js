(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[277],{aQz4:function(e,n,t){"use strict";t.r(n);var a,o=t("q1tI"),r=t("o0o1"),i=t.n(r),s=t("HaE+"),l=(t("nX5y"),t("smsc")),u=t("ThKj"),d=t("rePB"),p=(t("PMha"),t("cUqQ"),t("5TJ6"),t("jWP/"),t("iMsr"),t("mbJ9")),m=t.n(p),c=t("mXS1");function C(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function b(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?C(Object(t),!0).forEach((function(n){Object(d.a)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):C(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var f={Dashboard:{VisibleButtons:["GradientColumn"]},GradientColumn:{GradientColumns:[{ColumnId:"ChangeLastOrder",NegativeValue:-41,PositiveValue:56,NegativeColor:"#FF0000",PositiveColor:"#00CC00",BaseValue:0},{ColumnId:"ItemCount",PositiveValue:170,PositiveColor:"#008000",BaseValue:100},{ColumnId:"PackageCost",PositiveValue:20,PositiveColor:"#FF8000",BaseValue:0}]},Layout:{CurrentLayout:"Orders",Layouts:[{ColumnSorts:[{ColumnId:"Employee",SortOrder:"Asc"}],Columns:["OrderId","ChangeLastOrder","Employee","Freight","InvoicedCost","ItemCost","ItemCount","OrderCost","OrderDate","PackageCost"],Name:"Orders"}]}},O=function(){var e=Object(s.a)(i.a.mark((function e(n,t){var o;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o={primaryKey:"OrderId",userName:"Demo User",adaptableId:"Gradient Column Demo",predefinedConfig:f,vendorGrid:b(b({},{columnDefs:n,rowData:t,enableRangeSelection:!0,suppressMenuHide:!0,autoGroupColumnDef:{sortable:!0}}),{},{modules:c.a})},e.next=4,m.a.init(o);case 4:return a=e.sent,e.abrupt("return",{adaptableOptions:o,adaptableApi:a});case 6:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),g=Object(s.a)(i.a.mark((function e(){var n,t,a,o,r;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(n=new u.a).setUpAgGridLicence(),t=JSON.parse(JSON.stringify(l)),n.convertExcelData(t),n.updateItemCount(t),a=n.getBasicNorthwindColumnSchema(),e.next=8,O(a,t);case 8:return o=e.sent,r=o.adaptableOptions,o.adaptableApi,r.vendorGrid.onGridReady=function(e){e.columnApi.autoSizeAllColumns(),setTimeout((function(){return e.columnApi.autoSizeAllColumns()}),1),e.api.addEventListener("newColumnsLoaded",(function(){e.columnApi.autoSizeAllColumns()})),e.api.closeToolPanel()},e.abrupt("return",{code:"import '@adaptabletools/adaptable/index.css';\nimport '@adaptabletools/adaptable/themes/dark.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham-dark.css';\nimport Adaptable from '@adaptabletools/adaptable/agGrid';\nimport { GridOptions } from '@ag-grid-community/all-modules';\nimport {\n  AdaptableOptions,\n  PredefinedConfig,\n  AdaptableApi,\n} from '@adaptabletools/adaptable/types';\nimport { AllEnterpriseModules } from '@ag-grid-enterprise/all-modules';\n\nvar adaptableApi: AdaptableApi;\n\nconst demoConfig: PredefinedConfig = {\n  Dashboard: {\n    VisibleButtons: ['GradientColumn'],\n  },\n  GradientColumn: {\n    GradientColumns: [\n      {\n        ColumnId: 'ChangeLastOrder',\n        NegativeValue: -41,\n        PositiveValue: 56,\n        NegativeColor: '#FF0000',\n        PositiveColor: '#00CC00',\n        BaseValue: 0,\n      },\n      {\n        ColumnId: 'ItemCount',\n        PositiveValue: 170,\n        PositiveColor: '#008000',\n        BaseValue: 100,\n      },\n      {\n        ColumnId: 'PackageCost',\n        PositiveValue: 20,\n        PositiveColor: '#FF8000',\n        BaseValue: 0,\n      },\n    ],\n  },\n  Layout: {\n    CurrentLayout: 'Orders',\n    Layouts: [\n      {\n        ColumnSorts: [\n          {\n            ColumnId: 'Employee',\n            SortOrder: 'Asc',\n          },\n        ],\n        Columns: [\n          'OrderId',\n          'ChangeLastOrder',\n          'Employee',\n          'Freight',\n          'InvoicedCost',\n          'ItemCost',\n          'ItemCount',\n          'OrderCost',\n          'OrderDate',\n          'PackageCost',\n        ],\n\n        Name: 'Orders',\n      },\n    ],\n  },\n} as PredefinedConfig;\n\nexport default async (columnDefs: any[], rowData: any[]) => {\n  const gridOptions: GridOptions = {\n    columnDefs,\n    rowData,\n    enableRangeSelection: true,\n    suppressMenuHide: true,\n    autoGroupColumnDef: {\n      sortable: true,\n    },\n  };\n\n  const adaptableOptions: AdaptableOptions = {\n    primaryKey: 'OrderId',\n    userName: 'Demo User',\n    adaptableId: 'Gradient Column Demo',\n    predefinedConfig: demoConfig,\n    vendorGrid: { ...gridOptions, modules: AllEnterpriseModules },\n  };\n  adaptableApi = await Adaptable.init(adaptableOptions);\n\n  return { adaptableOptions, adaptableApi };\n};\n"});case 13:case"end":return e.stop()}}),e)})));n.default=function(e){return Object(o.useEffect)((function(){g().then((function(n){e.onReady&&e.onReady(n)}))}),[]),null}}}]);