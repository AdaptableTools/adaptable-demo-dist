(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[316],{PdQf:function(e,a,t){"use strict";t.r(a);var n=t("q1tI"),o=t("o0o1"),r=t.n(o),i=t("HaE+"),d=(t("nX5y"),t("ThKj")),l=t("rePB"),s=(t("PMha"),t("cUqQ"),t("5TJ6"),t("jWP/"),t("kmJB"),t("iMsr"),t("x727"),t("mbJ9")),p=t.n(s),m=t("mXS1");function u(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?u(Object(t),!0).forEach((function(a){Object(l.a)(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):u(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}var b={Dashboard:{Tabs:[{Name:"Demo Toolbar",Toolbars:["Layout","BulkUpdate","Custom"]}],CustomToolbars:[{Name:"Custom",Title:"Custom",CustomToolbarButtonLabels:["Edit First Row","Delete Row"]}]}},f=[{headerName:"Make",field:"make",filter:!0,editable:!0,type:"abColDefString"},{headerName:"Model",field:"model",filter:!0,editable:!0,type:"abColDefString"}],g=[{make:"Toyota",model:"Celica",price:35e3},{make:"Toyota",model:"Yaris",price:4e4},{make:"Toyota",model:"Corolla",price:28e3},{make:"Ford",model:"Mondeo",price:32e3},{make:"Ford",model:"Fiesta",price:35e3},{make:"Ford",model:"Focus",price:26750},{make:"Ford",model:"Galaxy",price:41e3},{make:"Porsche",model:"Boxter",price:72500},{make:"Porsche",model:"Mission",price:81e3},{make:"Mitsubbishi",model:"Outlander",price:97800}],y=Object(i.a)(r.a.mark((function e(){var a,t;return r.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a={primaryKey:"",userName:"Demo User",adaptableId:"AutoGenerated Primary Key Demo",autogeneratePrimaryKey:!0,dashboardOptions:{customToolbarButtons:[{label:"Edit First Row",onClick:function(){var e=g[0];e.model="New Value",t.gridApi.updateGridData([e])}},{label:"Delete Row",onClick:function(){var e=g[g.length-1];e&&t.gridApi.deleteGridData([e])}}]},predefinedConfig:b,vendorGrid:c(c({},{columnDefs:f,enableRangeSelection:!0,sideBar:!0,suppressAggFuncInHeader:!0,suppressMenuHide:!0}),{},{modules:m.a})},e.next=4,p.a.init(a);case 4:(t=e.sent).eventApi.on("AdaptableReady",(function(){t.gridApi.setGridData(g)}));case 6:case"end":return e.stop()}}),e)}))),w=Object(i.a)(r.a.mark((function e(){return r.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(new d.a).setUpAgGridLicence(),e.next=4,y();case 4:return e.abrupt("return",{code:"import '@adaptabletools/adaptable/index.css';\nimport '@adaptabletools/adaptable/themes/dark.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-alpine.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham-dark.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-alpine-dark.css';\nimport Adaptable from '@adaptabletools/adaptable/agGrid';\nimport {\n  AdaptableOptions,\n  PredefinedConfig,\n  AdaptableApi,\n} from '@adaptabletools/adaptable/types';\nimport { GridOptions, ColDef, RowNode } from '@ag-grid-community/all-modules';\nimport { AllEnterpriseModules } from '@ag-grid-enterprise/all-modules';\n\nconst demoConfig: PredefinedConfig = {\n  Dashboard: {\n    Tabs: [\n      {\n        Name: 'Demo Toolbar',\n        Toolbars: ['Layout', 'BulkUpdate', 'Custom'],\n      },\n    ],\n    CustomToolbars: [\n      {\n        Name: 'Custom',\n        Title: 'Custom',\n        CustomToolbarButtonLabels: ['Edit First Row', 'Delete Row'],\n      },\n    ],\n  },\n} as PredefinedConfig;\n\nconst columnSchema: ColDef[] = [\n  {\n    headerName: 'Make',\n    field: 'make',\n    filter: true,\n    editable: true,\n    type: 'abColDefString',\n  },\n  {\n    headerName: 'Model',\n    field: 'model',\n    filter: true,\n    editable: true,\n    type: 'abColDefString',\n  },\n];\n\n// Set up row data as normal - but DON'T pass it to Grid Options\nconst rowdata: any[] = [\n  {\n    make: 'Toyota',\n    model: 'Celica',\n    price: 35000,\n  },\n  { make: 'Toyota', model: 'Yaris', price: 40000 },\n  { make: 'Toyota', model: 'Corolla', price: 28000 },\n  { make: 'Ford', model: 'Mondeo', price: 32000 },\n  { make: 'Ford', model: 'Fiesta', price: 35000 },\n  { make: 'Ford', model: 'Focus', price: 26750 },\n  { make: 'Ford', model: 'Galaxy', price: 41000 },\n  { make: 'Porsche', model: 'Boxter', price: 72500 },\n  { make: 'Porsche', model: 'Mission', price: 81000 },\n  { make: 'Mitsubbishi', model: 'Outlander', price: 97800 },\n];\n\n// Create ag-Grid GridOptions object - but without setting row data\nexport default async () => {\n  const gridOptions: GridOptions = {\n    columnDefs: columnSchema,\n    enableRangeSelection: true,\n    sideBar: true,\n    suppressAggFuncInHeader: true,\n    suppressMenuHide: true,\n  };\n\n  // In Adaptable Options set `autogeneratePrimaryKey` to true\n  const adaptableOptions: AdaptableOptions = {\n    primaryKey: '',\n    userName: 'Demo User',\n    adaptableId: 'AutoGenerated Primary Key Demo',\n    autogeneratePrimaryKey: true,\n    dashboardOptions: {\n      customToolbarButtons: [\n        {\n          label: 'Edit First Row',\n          onClick: () => {\n            // get first row\n            let firstRow: any = rowdata[0];\n\n            // change model value in first row\n            firstRow['model'] = 'New Value';\n\n            // update Adaptable using Grid Api\n            adaptableApi.gridApi.updateGridData([firstRow]);\n          },\n        },\n        {\n          label: 'Delete Row',\n          onClick: () => {\n            // get last row\n            let lastRow: any = rowdata[rowdata.length - 1];\n\n            // delete row using Grid Api\n            if (lastRow) {\n              adaptableApi.gridApi.deleteGridData([lastRow]);\n            }\n          },\n        },\n      ],\n    },\n    predefinedConfig: demoConfig,\n    vendorGrid: { ...gridOptions, modules: AllEnterpriseModules },\n  };\n\n  const adaptableApi: AdaptableApi = await Adaptable.init(adaptableOptions);\n\n  // Because we are using an autogenerated Primary Key set row data via Grid Api\n  adaptableApi.eventApi.on('AdaptableReady', () => {\n    adaptableApi.gridApi.setGridData(rowdata);\n  });\n};\n"});case 5:case"end":return e.stop()}}),e)})));a.default=function(e){return Object(n.useEffect)((function(){w().then((function(a){e.onReady&&e.onReady(a)}))}),[]),null}}}]);