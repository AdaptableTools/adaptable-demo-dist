(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[221],{ln8C:function(e,n,o){"use strict";o.r(n);var t,r=o("q1tI"),a=o("o0o1"),i=o.n(a),s=o("HaE+"),l=(o("nX5y"),o("smsc")),d=o("ThKj"),p=o("rePB"),u=(o("PMha"),o("cUqQ"),o("5TJ6"),o("jWP/"),o("iMsr"),o("mbJ9")),c=o.n(u),m=o("mXS1");function C(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,t)}return o}function b(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?C(Object(o),!0).forEach((function(n){Object(p.a)(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):C(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}var f={Dashboard:{VisibleButtons:["Dashboard","Query"],Tabs:[{Name:"Toolbars",Toolbars:["SmartEdit","Export","Layout","QuickSearch"]}]},SmartEdit:{SmartEditValue:10},Export:{CurrentReport:"High Freight",Reports:[{Name:"High Freight",ReportColumnScope:"ScopeColumns",ReportRowScope:"ExpressionRows",Scope:{ColumnIds:["OrderId","Freight","Employee","PackageCost","InvoicedCost"]},Expression:"[Freight] > 500"}]},CustomSort:{CustomSorts:[{ColumnId:"Employee",SortedValues:["Margaret Peacock","Steven Buchanan","Janet Leverling"]}]},ConditionalStyle:{ConditionalStyles:[{Scope:{DataTypes:["Number"]},Style:{ForeColor:"#008000"},Predicate:{Id:"Positive"}},{Scope:{DataTypes:["Number"]},Style:{ForeColor:"#ff0000"},Predicate:{PredicateId:"Negative"}},{Style:{BackColor:"#ffffcc",FontStyle:"Italic",ForeColor:"#000000"},Scope:{All:!0},Expression:"[InvoicedCost] > 2000"}]},Layout:{CurrentLayout:"Orders View",Layouts:[{Columns:["OrderId","OrderDate","CustomerReference","CompanyName","ContactName","Employee","InvoicedCost","ChangeLastOrder","OrderCost","PackageCost","ItemCost","ItemCount"],Name:"Orders View"},{Columns:["OrderId","ShipVia","Freight","ShipName","ShipCountry","ShippedDate","CustomerReference"],ColumnSorts:[{ColumnId:"ShipName",SortOrder:"Asc"}],Name:"Shipping View"}]},FormatColumn:{FormatColumns:[{Scope:{ColumnIds:["OrderId"]},Style:{BackColor:"#d4fb79",ForeColor:"#8b0000",FontWeight:"Normal",FontStyle:"Normal"}}]},QuickSearch:{QuickSearchText:"g",Style:{BackColor:"#ffff00",ForeColor:"#8b0000"}}},S=function(){var e=Object(s.a)(i.a.mark((function e(n,o){var r;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r={primaryKey:"OrderId",userName:"Demo User",adaptableId:"Predefined Config Demo",predefinedConfig:f,vendorGrid:b(b({},{columnDefs:n,rowData:o,enableRangeSelection:!0,sideBar:!0,suppressMenuHide:!0,autoGroupColumnDef:{sortable:!0},columnTypes:{abColDefNumber:{},abColDefString:{},abColDefBoolean:{},abColDefDate:{},abColDefObject:{},abColDefNumberArray:{}}}),{},{modules:m.a})},e.next=4,c.a.init(r);case 4:return t=e.sent,e.abrupt("return",{adaptableOptions:r,adaptableApi:t});case 6:case"end":return e.stop()}}),e)})));return function(n,o){return e.apply(this,arguments)}}(),y=Object(s.a)(i.a.mark((function e(){var n,o,t,r,a;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(n=new d.a).setUpAgGridLicence(),o=JSON.parse(JSON.stringify(l)),n.convertExcelData(o),t=n.getBasicNorthwindColumnSchema(),e.next=7,S(t,o);case 7:return r=e.sent,a=r.adaptableOptions,r.adaptableApi,a.vendorGrid.onGridReady=function(e){e.columnApi.autoSizeAllColumns(),setTimeout((function(){return e.columnApi.autoSizeAllColumns()}),1),e.api.addEventListener("newColumnsLoaded",(function(){e.columnApi.autoSizeAllColumns()})),e.api.closeToolPanel()},e.abrupt("return",{code:"import '@adaptabletools/adaptable/index.css';\nimport '@adaptabletools/adaptable/themes/dark.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham-dark.css';\nimport Adaptable from '@adaptabletools/adaptable/agGrid';\nimport { GridOptions } from '@ag-grid-community/all-modules';\nimport {\n  AdaptableOptions,\n  PredefinedConfig,\n  AdaptableApi,\n} from '@adaptabletools/adaptable/types';\nimport { AllEnterpriseModules } from '@ag-grid-enterprise/all-modules';\n\nvar adaptableApi: AdaptableApi;\n\nconst demoConfig: PredefinedConfig = {\n  Dashboard: {\n    VisibleButtons: ['Dashboard', 'Query'],\n    Tabs: [\n      {\n        Name: 'Toolbars',\n        Toolbars: ['SmartEdit', 'Export', 'Layout', 'QuickSearch'],\n      },\n    ],\n  },\n  SmartEdit: {\n    SmartEditValue: 10,\n  },\n  Export: {\n    CurrentReport: 'High Freight',\n    Reports: [\n      {\n        Name: 'High Freight',\n        ReportColumnScope: 'ScopeColumns',\n        ReportRowScope: 'ExpressionRows',\n        Scope: {\n          ColumnIds: [\n            'OrderId',\n            'Freight',\n            'Employee',\n            'PackageCost',\n            'InvoicedCost',\n          ],\n        },\n        Expression: '[Freight] > 500',\n      },\n    ],\n  },\n  CustomSort: {\n    CustomSorts: [\n      {\n        ColumnId: 'Employee',\n        SortedValues: [\n          'Margaret Peacock',\n          'Steven Buchanan',\n          'Janet Leverling',\n        ],\n      },\n    ],\n  },\n  ConditionalStyle: {\n    ConditionalStyles: [\n      {\n        Scope: {\n          DataTypes: ['Number'],\n        },\n        Style: {\n          ForeColor: '#008000',\n        },\n        Predicate: {\n          Id: 'Positive',\n        },\n      },\n      {\n        Scope: {\n          DataTypes: ['Number'],\n        },\n        Style: {\n          ForeColor: '#ff0000',\n        },\n        Predicate: {\n          PredicateId: 'Negative',\n        },\n      },\n      {\n        Style: {\n          BackColor: '#ffffcc',\n          FontStyle: 'Italic',\n          ForeColor: '#000000',\n        },\n        Scope: {\n          All: true,\n        },\n        Expression: '[InvoicedCost] > 2000',\n      },\n    ],\n  },\n  Layout: {\n    CurrentLayout: 'Orders View',\n    Layouts: [\n      {\n        Columns: [\n          'OrderId',\n          'OrderDate',\n          'CustomerReference',\n          'CompanyName',\n          'ContactName',\n          'Employee',\n          'InvoicedCost',\n          'ChangeLastOrder',\n          'OrderCost',\n          'PackageCost',\n          'ItemCost',\n          'ItemCount',\n        ],\n        Name: 'Orders View',\n      },\n      {\n        Columns: [\n          'OrderId',\n          'ShipVia',\n          'Freight',\n          'ShipName',\n          'ShipCountry',\n          'ShippedDate',\n          'CustomerReference',\n        ],\n        ColumnSorts: [\n          {\n            ColumnId: 'ShipName',\n            SortOrder: 'Asc',\n          },\n        ],\n        Name: 'Shipping View',\n      },\n    ],\n  },\n  FormatColumn: {\n    FormatColumns: [\n      {\n        Scope: {\n          ColumnIds: ['OrderId'],\n        },\n        Style: {\n          BackColor: '#d4fb79',\n          ForeColor: '#8b0000',\n          FontWeight: 'Normal',\n          FontStyle: 'Normal',\n        },\n      },\n    ],\n  },\n  QuickSearch: {\n    QuickSearchText: 'g',\n    Style: {\n      BackColor: '#ffff00',\n      ForeColor: '#8b0000',\n    },\n  },\n} as PredefinedConfig;\n\nexport default async (columnDefs: any[], rowData: any[]) => {\n  const gridOptions: GridOptions = {\n    columnDefs,\n    rowData,\n    enableRangeSelection: true,\n    sideBar: true,\n    suppressMenuHide: true,\n    autoGroupColumnDef: {\n      sortable: true,\n    },\n    columnTypes: {\n      abColDefNumber: {},\n      abColDefString: {},\n      abColDefBoolean: {},\n      abColDefDate: {},\n      abColDefObject: {},\n      abColDefNumberArray: {},\n    },\n  };\n\n  const adaptableOptions: AdaptableOptions = {\n    primaryKey: 'OrderId',\n    userName: 'Demo User',\n    adaptableId: 'Predefined Config Demo',\n    predefinedConfig: demoConfig,\n    vendorGrid: { ...gridOptions, modules: AllEnterpriseModules },\n  };\n  adaptableApi = await Adaptable.init(adaptableOptions);\n\n  return { adaptableOptions, adaptableApi };\n};\n"});case 12:case"end":return e.stop()}}),e)})));n.default=function(e){return Object(r.useEffect)((function(){y().then((function(n){e.onReady&&e.onReady(n)}))}),[]),null}}}]);